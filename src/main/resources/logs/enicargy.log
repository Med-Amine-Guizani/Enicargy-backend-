2025-05-05 19:01:34 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:01:34 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:01:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:01:34 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:01:34 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:01:34 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:01:34 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:01:34 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:01:34 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 240 ms
2025-05-05 19:01:34 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:01:34 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:01:34 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:01:34 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 19:01:34 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@bf07d74
2025-05-05 19:01:34 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 19:01:34 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:01:34 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:01:34 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:01:34 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:01:34 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:01:35 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:01:35 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:01:35 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:01:35 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:01:35 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:01:35 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.148 seconds (process running for 241.526)
2025-05-05 19:01:35 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:01:59 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-05-05 19:01:59 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:01:59 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:01:59 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:01:59 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 19:01:59 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 19:01:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:01:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:02:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:02:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:02:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:02:00 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:02:00 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:02:00 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:02:00 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 231 ms
2025-05-05 19:02:00 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:02:00 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:02:00 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:02:00 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-05 19:02:00 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57e6b4b5
2025-05-05 19:02:00 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-05 19:02:00 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:02:00 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:02:00 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:02:00 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:02:00 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:02:00 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:02:00 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:02:00 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:02:00 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:02:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:02:00 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.05 seconds (process running for 267.001)
2025-05-05 19:02:00 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:02:21 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:02:21 INFO  [Thread-13] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:02:21 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:02:21 INFO  [Thread-13] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:02:21 INFO  [Thread-13] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-05 19:02:21 INFO  [Thread-13] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-05 19:02:21 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:02:21 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:02:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:02:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:02:21 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:02:21 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:02:21 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:02:21 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:02:21 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 211 ms
2025-05-05 19:02:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:02:21 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:02:21 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:02:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-05 19:02:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@cfc68ac
2025-05-05 19:02:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-05 19:02:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:02:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:02:21 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:02:21 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:02:21 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:02:21 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:02:21 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:02:21 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:02:22 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:02:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:02:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.016 seconds (process running for 288.191)
2025-05-05 19:02:22 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:02:47 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:02:47 INFO  [Thread-17] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:02:47 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:02:47 INFO  [Thread-17] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:02:47 INFO  [Thread-17] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-05 19:02:47 INFO  [Thread-17] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-05 19:02:47 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:02:47 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:02:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:02:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.
2025-05-05 19:02:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:02:48 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:02:48 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:02:48 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:02:48 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 206 ms
2025-05-05 19:02:48 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:02:48 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:02:48 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:02:48 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-05-05 19:02:48 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45d076ed
2025-05-05 19:02:48 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-05-05 19:02:48 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:02:48 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:02:48 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:02:48 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:02:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:02:48 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:02:48 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:02:48 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:02:48 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:02:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:02:48 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.022 seconds (process running for 314.895)
2025-05-05 19:02:48 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:07:43 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2025-05-05 19:07:43 INFO  [Thread-21] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:07:43 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:07:43 INFO  [Thread-21] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:07:43 INFO  [Thread-21] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-05-05 19:07:43 INFO  [Thread-21] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-05-05 19:07:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:07:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:07:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:07:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 5 JPA repository interfaces.
2025-05-05 19:07:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:07:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:07:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:07:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:07:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 607 ms
2025-05-05 19:07:44 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:07:44 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:07:44 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:07:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-05-05 19:07:44 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a0df333
2025-05-05 19:07:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-05-05 19:07:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:07:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:07:44 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:07:44 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:07:45 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:07:45 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:07:45 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:07:45 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:07:46 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:07:46 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:07:46 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.347 seconds (process running for 612.074)
2025-05-05 19:07:46 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:08:22 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:08:22 INFO  [Thread-25] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:08:22 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:08:22 INFO  [Thread-25] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:08:22 INFO  [Thread-25] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-05-05 19:08:22 INFO  [Thread-25] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-05-05 19:08:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 2008 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:08:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:08:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:08:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-05-05 19:08:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:08:22 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:08:22 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:08:22 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:08:22 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 524 ms
2025-05-05 19:08:22 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:08:22 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:08:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:08:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-05-05 19:08:22 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e645677
2025-05-05 19:08:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-05-05 19:08:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:08:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:08:22 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:08:22 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:08:23 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:08:23 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:08:23 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:08:23 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:08:24 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:08:24 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:08:24 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.954 seconds (process running for 650.239)
2025-05-05 19:08:24 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:09:17 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:09:17 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:09:17 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:09:17 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-05-05 19:09:17 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-05-05 19:09:19 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 19:09:19 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:09:19 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:09:19 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 19:09:19 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 19:09:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:09:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 5 JPA repository interfaces.
2025-05-05 19:09:21 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:09:21 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:09:21 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:09:21 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:09:21 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:09:21 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1687 ms
2025-05-05 19:09:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:09:21 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-05 19:09:21 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:09:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:09:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-05 19:09:22 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19e0dc7a
2025-05-05 19:09:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-05 19:09:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:09:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:09:22 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:09:23 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:09:24 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:09:25 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:09:25 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:09:25 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:09:26 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:09:26 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:09:26 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:09:26 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.839 seconds (process running for 7.477)
2025-05-05 19:09:59 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:09:59 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:09:59 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:09:59 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:09:59 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:09:59 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:09:59 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-05 19:09:59 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-05 19:09:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:09:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:10:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:10:00 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2025-05-05 19:10:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:10:00 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:00 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:10:00 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:10:00 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:10:00 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 811 ms
2025-05-05 19:10:00 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:10:00 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:10:00 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:10:00 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 19:10:00 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@cf72725
2025-05-05 19:10:00 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 19:10:00 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:10:00 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:10:00 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:10:00 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:10:01 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:10:01 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:10:01 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:10:01 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:10:01 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:10:01 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:01 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:10:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.108 seconds (process running for 43.25)
2025-05-05 19:10:01 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:10:06 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:10:06 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:10:06 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:06 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:10:06 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:06 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:10:06 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 19:10:06 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 19:10:07 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:10:07 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:10:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:10:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 5 JPA repository interfaces.
2025-05-05 19:10:08 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:10:08 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:08 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:10:08 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:10:08 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:10:08 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1408 ms
2025-05-05 19:10:08 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:10:08 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:10:08 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:10:08 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-05 19:10:08 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b0bbd68
2025-05-05 19:10:08 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-05 19:10:08 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:10:08 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:10:08 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:10:08 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:10:09 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:10:09 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:10:09 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:10:09 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:10:10 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:10:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:10:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:10:10 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 3.282 seconds (process running for 51.588)
2025-05-05 19:10:10 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:11:35 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 19:11:35 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 19:11:35 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-05-05 19:11:35 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - Appel de la méthode : ResponseEntity org.example.backendenicargy.Controllers.AuthController.login(LoginRequest) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-05 19:11:36 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - Méthode exécutée : ResponseEntity org.example.backendenicargy.Controllers.AuthController.login(LoginRequest) 
2025-05-05 19:11:49 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:11:49 INFO  [Thread-11] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:11:49 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:11:49 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:11:49 INFO  [Thread-11] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:11:49 INFO  [Thread-11] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:11:49 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-05 19:11:49 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-05 19:11:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:11:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:11:49 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:11:49 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-05-05 19:11:50 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:11:50 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:11:50 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:11:50 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:11:50 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:11:50 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 571 ms
2025-05-05 19:11:50 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:11:50 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:11:50 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:11:50 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-05 19:11:50 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@fe52aa9
2025-05-05 19:11:50 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-05 19:11:50 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:11:50 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:11:50 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:11:50 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:11:51 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:11:51 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:11:51 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:11:51 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:11:52 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:11:52 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:11:52 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:11:52 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 3.23 seconds (process running for 154.037)
2025-05-05 19:11:52 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:12:07 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 19:12:07 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 19:12:07 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-05-05 19:12:07 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - Appel de la méthode : ResponseEntity org.example.backendenicargy.Controllers.AuthController.login(LoginRequest) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-05 19:12:07 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:12:07 INFO  [Thread-15] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:12:07 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:12:08 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - Méthode exécutée : ResponseEntity org.example.backendenicargy.Controllers.AuthController.login(LoginRequest) 
2025-05-05 19:12:08 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:12:08 INFO  [Thread-15] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:12:08 INFO  [Thread-15] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:12:08 INFO  [Thread-15] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-05 19:12:08 INFO  [Thread-15] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-05 19:12:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:12:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:12:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:12:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-05-05 19:12:08 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:12:08 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:12:08 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:12:08 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:12:08 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:12:08 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 653 ms
2025-05-05 19:12:09 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:12:09 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:12:09 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:12:09 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-05-05 19:12:09 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19e2ad5
2025-05-05 19:12:09 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-05-05 19:12:09 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:12:09 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:12:09 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:12:09 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:12:09 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:12:09 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:12:10 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:12:10 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:12:10 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:12:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:12:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:12:10 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.35 seconds (process running for 171.901)
2025-05-05 19:12:10 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:14:52 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:14:52 INFO  [Thread-19] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:14:52 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:14:52 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:14:52 INFO  [Thread-19] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:14:52 INFO  [Thread-19] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:14:52 INFO  [Thread-19] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-05-05 19:14:52 INFO  [Thread-19] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-05-05 19:14:52 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:14:52 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:14:53 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:14:53 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 5 JPA repository interfaces.
2025-05-05 19:14:53 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:14:53 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:14:53 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:14:53 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:14:53 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:14:53 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 472 ms
2025-05-05 19:14:53 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:14:53 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:14:53 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:14:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-05-05 19:14:53 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@121f3f37
2025-05-05 19:14:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-05-05 19:14:53 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:14:53 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:14:53 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:14:53 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:14:54 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:14:54 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:14:55 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:14:55 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:14:56 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:14:56 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:14:56 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:14:56 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 3.27 seconds (process running for 337.428)
2025-05-05 19:14:56 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:15:15 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:15:15 INFO  [Thread-23] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:15:15 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:15 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:15:15 INFO  [Thread-23] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:15 INFO  [Thread-23] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:15:15 INFO  [Thread-23] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-05-05 19:15:15 INFO  [Thread-23] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-05-05 19:15:15 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:15:15 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:15:15 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:15:15 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2025-05-05 19:15:15 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:15:15 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:15 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:15:15 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:15:15 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:15:15 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 453 ms
2025-05-05 19:15:16 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:15:16 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:15:16 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:15:16 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-05-05 19:15:16 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cfc788d
2025-05-05 19:15:16 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-05-05 19:15:16 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:15:16 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:15:16 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:15:16 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:15:17 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:15:17 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:15:17 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:15:17 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:15:18 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:15:18 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:18 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:15:18 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.907 seconds (process running for 359.676)
2025-05-05 19:15:18 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:15:21 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:15:21 INFO  [Thread-27] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:15:21 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:21 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:15:21 INFO  [Thread-27] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:21 INFO  [Thread-27] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:15:21 INFO  [Thread-27] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-05-05 19:15:21 INFO  [Thread-27] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-05-05 19:15:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:15:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:15:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:15:22 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 5 JPA repository interfaces.
2025-05-05 19:15:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:15:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:22 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:15:22 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:15:22 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:15:22 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 503 ms
2025-05-05 19:15:22 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:15:22 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:15:22 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:15:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-05-05 19:15:22 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection com.mysql.cj.jdbc.ConnectionImpl@73a54c95
2025-05-05 19:15:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-05-05 19:15:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:15:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:15:22 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-8)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:15:22 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:15:23 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:15:23 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:15:23 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:15:23 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:15:24 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:15:24 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:15:24 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:15:24 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.237 seconds (process running for 365.587)
2025-05-05 19:15:24 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:16:49 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:16:49 INFO  [Thread-31] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:16:49 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:16:49 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:16:49 INFO  [Thread-31] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:16:49 INFO  [Thread-31] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:16:49 INFO  [Thread-31] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-05-05 19:16:49 INFO  [Thread-31] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-05-05 19:16:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:16:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:16:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:16:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 JPA repository interfaces.
2025-05-05 19:16:50 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:16:50 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:16:50 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:16:50 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:16:50 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:16:50 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 480 ms
2025-05-05 19:16:50 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:16:50 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:16:50 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:16:50 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-05-05 19:16:50 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection com.mysql.cj.jdbc.ConnectionImpl@665530c6
2025-05-05 19:16:50 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-05-05 19:16:50 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:16:50 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:16:50 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-9)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:16:50 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:16:51 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:16:52 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:16:52 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:16:52 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:16:52 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:16:52 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:16:52 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:16:52 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.666 seconds (process running for 453.894)
2025-05-05 19:16:52 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:18:56 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:18:56 INFO  [Thread-35] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:18:56 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:18:56 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:18:56 INFO  [Thread-35] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:18:56 INFO  [Thread-35] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:18:56 INFO  [Thread-35] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-05-05 19:18:56 INFO  [Thread-35] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-05-05 19:18:56 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:18:56 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:18:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:18:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 5 JPA repository interfaces.
2025-05-05 19:18:57 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:18:57 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:18:57 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:18:57 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:18:57 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:18:57 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 881 ms
2025-05-05 19:18:57 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:18:57 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:18:57 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:18:57 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-05-05 19:18:57 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e63919c
2025-05-05 19:18:57 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-05-05 19:18:57 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:18:57 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:18:57 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-10)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:18:57 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:18:58 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:18:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:18:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:18:58 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:18:59 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:18:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:18:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:18:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.852 seconds (process running for 580.778)
2025-05-05 19:18:59 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:23:11 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:23:11 INFO  [Thread-39] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:23:11 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:23:11 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:23:11 INFO  [Thread-39] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:23:11 INFO  [Thread-39] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:23:11 INFO  [Thread-39] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-05-05 19:23:11 INFO  [Thread-39] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-05-05 19:23:11 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:23:11 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:23:11 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:23:11 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 5 JPA repository interfaces.
2025-05-05 19:23:12 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:23:12 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:23:12 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:23:12 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:23:12 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:23:12 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 826 ms
2025-05-05 19:23:12 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:23:12 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:23:12 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:23:12 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-05-05 19:23:12 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection com.mysql.cj.jdbc.ConnectionImpl@477e37a6
2025-05-05 19:23:12 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-05-05 19:23:12 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:23:12 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:23:12 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-11)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:23:12 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:23:12 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:23:13 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:23:13 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:23:13 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:23:14 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:23:14 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:23:14 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:23:14 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 3.634 seconds (process running for 836.258)
2025-05-05 19:23:14 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:25:01 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:25:01 INFO  [Thread-43] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:25:01 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:25:01 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:25:01 INFO  [Thread-43] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:25:01 INFO  [Thread-43] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:25:01 INFO  [Thread-43] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-05-05 19:25:01 INFO  [Thread-43] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-05-05 19:25:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:25:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:25:01 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:25:01 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-05-05 19:25:01 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:25:01 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:25:01 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:25:01 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:25:01 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:25:01 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 220 ms
2025-05-05 19:25:02 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:25:02 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:25:02 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:25:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-05-05 19:25:02 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3355475f
2025-05-05 19:25:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-05-05 19:25:02 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:25:02 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:25:02 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-12)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:25:02 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:25:02 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:25:02 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:25:02 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:25:02 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:25:02 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:25:02 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:25:02 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:25:02 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.092 seconds (process running for 944.103)
2025-05-05 19:25:02 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:27:03 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:27:03 INFO  [Thread-47] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:27:03 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:27:03 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:27:03 INFO  [Thread-47] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:27:03 INFO  [Thread-47] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:27:03 INFO  [Thread-47] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-05-05 19:27:03 INFO  [Thread-47] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-05-05 19:27:03 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:27:03 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:27:03 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:27:03 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.
2025-05-05 19:27:03 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:27:03 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:27:03 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:27:03 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:27:03 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:27:03 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 214 ms
2025-05-05 19:27:03 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:27:03 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:27:04 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:27:04 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-05-05 19:27:04 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d971aa
2025-05-05 19:27:04 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-05-05 19:27:04 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:27:04 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:27:04 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-13)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:27:04 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:27:04 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:27:04 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:27:04 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:27:04 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:27:04 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:27:04 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:27:04 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:27:04 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.192 seconds (process running for 1066.199)
2025-05-05 19:27:04 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:28:49 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:28:49 INFO  [Thread-51] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:28:49 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:28:49 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:28:49 INFO  [Thread-51] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:28:49 INFO  [Thread-51] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:28:49 INFO  [Thread-51] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-05-05 19:28:49 INFO  [Thread-51] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-05-05 19:28:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:28:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:28:49 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:28:49 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:28:49 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:28:49 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:28:49 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:28:49 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:28:49 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:28:49 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 220 ms
2025-05-05 19:28:49 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:28:49 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:28:49 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:28:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-05-05 19:28:49 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection com.mysql.cj.jdbc.ConnectionImpl@434a85f3
2025-05-05 19:28:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-05-05 19:28:49 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:28:49 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:28:49 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-14)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:28:50 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:28:50 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:28:50 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:28:50 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:28:50 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:28:50 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:28:50 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:28:50 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:28:50 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.053 seconds (process running for 1172.018)
2025-05-05 19:28:50 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:29:01 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:29:01 INFO  [Thread-55] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:29:01 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:01 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:29:01 INFO  [Thread-55] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:01 INFO  [Thread-55] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:29:01 INFO  [Thread-55] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-05-05 19:29:01 INFO  [Thread-55] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-05-05 19:29:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:29:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:29:02 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:29:02 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-05-05 19:29:02 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:29:02 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:02 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:29:02 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:29:02 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:29:02 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 952 ms
2025-05-05 19:29:03 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:29:03 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:29:03 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:29:03 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-05-05 19:29:03 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b9de33b
2025-05-05 19:29:03 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-05-05 19:29:03 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:29:03 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:29:03 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-15)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:29:03 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:29:03 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:29:04 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:29:04 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:29:04 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:29:05 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:29:05 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:05 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:29:05 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 3.947 seconds (process running for 1187.027)
2025-05-05 19:29:05 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:29:08 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:29:08 INFO  [Thread-59] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:29:08 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:08 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:29:08 INFO  [Thread-59] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:08 INFO  [Thread-59] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:29:08 INFO  [Thread-59] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-05-05 19:29:08 INFO  [Thread-59] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-05-05 19:29:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:29:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:29:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:29:08 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 5 JPA repository interfaces.
2025-05-05 19:29:09 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:29:09 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:09 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:29:09 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:29:09 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:29:09 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 889 ms
2025-05-05 19:29:09 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:29:09 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:29:09 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:29:09 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-05-05 19:29:09 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection com.mysql.cj.jdbc.ConnectionImpl@618f74ee
2025-05-05 19:29:09 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-05-05 19:29:09 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:29:09 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:29:09 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-16)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:29:09 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:29:09 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:29:10 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:29:10 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:29:10 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:29:10 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:29:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:29:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:29:10 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.522 seconds (process running for 1192.199)
2025-05-05 19:29:10 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:30:16 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:30:16 INFO  [Thread-63] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:30:16 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:30:16 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:30:16 INFO  [Thread-63] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:30:16 INFO  [Thread-63] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:30:16 INFO  [Thread-63] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-05-05 19:30:16 INFO  [Thread-63] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-05-05 19:30:16 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:30:16 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:30:16 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:30:16 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 5 JPA repository interfaces.
2025-05-05 19:30:16 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:30:16 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:30:16 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:30:16 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:30:16 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:30:16 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 204 ms
2025-05-05 19:30:16 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:30:16 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:30:16 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:30:16 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-05-05 19:30:16 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c26998f
2025-05-05 19:30:16 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-05-05 19:30:16 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:30:16 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:30:16 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-17)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:30:16 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:30:16 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:30:16 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:30:16 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:30:16 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:30:17 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:30:17 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:30:17 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:30:17 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 0.986 seconds (process running for 1258.437)
2025-05-05 19:30:17 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:37:41 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:37:41 INFO  [Thread-67] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:37:41 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:37:41 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:37:41 INFO  [Thread-67] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:37:41 INFO  [Thread-67] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:37:41 INFO  [Thread-67] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-05-05 19:37:41 INFO  [Thread-67] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
2025-05-05 19:37:41 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:37:41 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:37:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:37:41 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:37:41 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:37:41 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:37:41 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:37:41 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:37:42 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:37:42 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 242 ms
2025-05-05 19:37:42 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:37:42 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:37:42 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:37:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-18 - Starting...
2025-05-05 19:37:42 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-18 - Added connection com.mysql.cj.jdbc.ConnectionImpl@418a3b48
2025-05-05 19:37:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-18 - Start completed.
2025-05-05 19:37:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:37:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:37:42 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-18)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:37:42 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:37:42 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:37:42 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:37:42 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:37:42 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:37:42 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:37:42 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:37:42 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:37:42 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.19 seconds (process running for 1704.211)
2025-05-05 19:37:42 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:39:42 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (0 additions, 1 deletion, 1 modification)
2025-05-05 19:39:42 INFO  [Thread-71] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:39:42 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:42 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:39:42 INFO  [Thread-71] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:42 INFO  [Thread-71] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:39:42 INFO  [Thread-71] com.zaxxer.hikari.HikariDataSource - HikariPool-18 - Shutdown initiated...
2025-05-05 19:39:42 INFO  [Thread-71] com.zaxxer.hikari.HikariDataSource - HikariPool-18 - Shutdown completed.
2025-05-05 19:39:42 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:39:42 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:39:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:39:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-05-05 19:39:42 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:39:42 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:42 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:39:42 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:39:42 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:39:42 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 246 ms
2025-05-05 19:39:42 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:39:42 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:39:42 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:39:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-19 - Starting...
2025-05-05 19:39:42 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-19 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39118dfa
2025-05-05 19:39:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-19 - Start completed.
2025-05-05 19:39:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:39:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:39:42 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-19)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:39:42 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:39:43 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:39:43 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:39:43 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:39:43 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:39:43 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:39:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:39:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.167 seconds (process running for 1824.911)
2025-05-05 19:39:43 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:39:45 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-05-05 19:39:45 INFO  [Thread-75] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:39:45 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:45 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:39:45 INFO  [Thread-75] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:45 INFO  [Thread-75] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:39:45 INFO  [Thread-75] com.zaxxer.hikari.HikariDataSource - HikariPool-19 - Shutdown initiated...
2025-05-05 19:39:45 INFO  [Thread-75] com.zaxxer.hikari.HikariDataSource - HikariPool-19 - Shutdown completed.
2025-05-05 19:39:45 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 38492 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:39:45 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:39:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:39:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.
2025-05-05 19:39:45 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:39:45 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:45 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:39:45 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:39:45 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:39:45 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 211 ms
2025-05-05 19:39:45 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:39:45 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:39:45 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:39:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-20 - Starting...
2025-05-05 19:39:45 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-20 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ebe84c9
2025-05-05 19:39:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-20 - Start completed.
2025-05-05 19:39:45 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:39:45 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:39:45 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-20)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:39:45 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:39:45 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:39:45 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:39:45 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:39:45 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:39:46 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:39:46 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:46 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:39:46 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.547 seconds (process running for 1827.974)
2025-05-05 19:39:46 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:39:52 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:39:52 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:39:52 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:39:52 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-20 - Shutdown initiated...
2025-05-05 19:39:52 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-20 - Shutdown completed.
2025-05-05 19:39:57 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 19:39:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:39:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:39:57 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 19:39:57 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 19:39:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:39:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 5 JPA repository interfaces.
2025-05-05 19:39:58 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:39:58 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:39:58 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:39:58 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:39:58 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:39:58 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1180 ms
2025-05-05 19:39:58 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:39:58 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-05 19:39:58 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:39:58 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:39:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-05 19:39:59 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64c6a06e
2025-05-05 19:39:59 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-05 19:39:59 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:39:59 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:39:59 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:39:59 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:40:00 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:40:00 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:40:00 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:40:00 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:40:01 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:40:01 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:40:01 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:40:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 4.196 seconds (process running for 4.665)
2025-05-05 19:40:07 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 19:40:07 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 19:40:07 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-05 19:40:08 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-05 19:40:08 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-05 19:40:37 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:40:37 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:40:37 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:40:37 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:40:37 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:40:37 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:40:37 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-05 19:40:37 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-05 19:40:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:40:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:40:37 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:40:37 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-05-05 19:40:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:40:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:40:38 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:40:38 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:40:38 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:40:38 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 364 ms
2025-05-05 19:40:38 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:40:38 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:40:38 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:40:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 19:40:38 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ac664b
2025-05-05 19:40:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 19:40:38 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:40:38 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:40:38 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:40:38 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:40:38 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:40:38 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:40:38 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:40:39 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:40:39 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:40:39 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:40:39 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:40:39 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.631 seconds (process running for 42.788)
2025-05-05 19:40:39 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:41:24 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 19:41:24 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 19:41:24 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-05 19:41:24 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-05 19:41:24 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-05 19:41:24 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:41:24 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:41:24 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:24 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:41:24 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:24 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:41:24 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 19:41:24 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 19:41:24 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:41:24 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:41:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:41:24 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-05-05 19:41:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:41:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:25 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:41:25 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:41:25 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:41:25 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 240 ms
2025-05-05 19:41:25 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:41:25 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:41:25 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:41:25 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-05 19:41:25 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@580a46b6
2025-05-05 19:41:25 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-05 19:41:25 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:41:25 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:41:25 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:41:25 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:41:25 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:41:25 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:41:25 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:41:25 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:41:25 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:41:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:41:25 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.108 seconds (process running for 89.424)
2025-05-05 19:41:25 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:41:58 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:41:58 INFO  [Thread-11] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:41:58 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:58 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:41:58 INFO  [Thread-11] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:58 INFO  [Thread-11] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:41:58 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-05 19:41:58 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-05 19:41:58 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:41:58 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:41:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:41:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-05-05 19:41:58 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:41:58 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:58 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:41:58 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:41:58 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:41:58 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 223 ms
2025-05-05 19:41:58 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:41:58 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:41:58 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:41:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-05 19:41:58 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bf3c4ac
2025-05-05 19:41:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-05 19:41:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:41:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:41:58 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:41:58 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:41:58 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:41:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:41:59 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:41:59 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:41:59 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:41:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:41:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:41:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.019 seconds (process running for 122.839)
2025-05-05 19:41:59 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:42:07 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:42:07 INFO  [Thread-15] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:42:07 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:07 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:42:07 INFO  [Thread-15] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:07 INFO  [Thread-15] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:42:07 INFO  [Thread-15] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-05 19:42:07 INFO  [Thread-15] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-05 19:42:07 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:42:07 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:42:07 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:42:07 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-05-05 19:42:07 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:42:07 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:07 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:42:07 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:42:07 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:42:07 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 249 ms
2025-05-05 19:42:07 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:42:07 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:42:07 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:42:07 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-05-05 19:42:07 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1471586c
2025-05-05 19:42:07 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-05-05 19:42:07 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:42:07 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:42:07 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:42:07 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:42:07 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:42:07 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:42:07 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:42:07 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:42:08 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:42:08 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:08 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:42:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.246 seconds (process running for 131.777)
2025-05-05 19:42:08 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:42:13 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 19:42:13 INFO  [Thread-19] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 19:42:13 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:13 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 19:42:13 INFO  [Thread-19] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:13 INFO  [Thread-19] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:42:13 INFO  [Thread-19] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-05-05 19:42:13 INFO  [Thread-19] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-05-05 19:42:13 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.4 with PID 34056 (C:\Users\amani\Desktop\PlatDev\Enicargy-backend-\target\classes started by amani in C:\Users\amani\Desktop\PlatDev\Enicargy-backend-)
2025-05-05 19:42:13 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 19:42:14 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 19:42:14 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-05-05 19:42:14 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 19:42:14 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:14 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 19:42:14 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 19:42:14 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 19:42:14 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 234 ms
2025-05-05 19:42:14 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 19:42:14 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 19:42:14 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 19:42:14 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-05-05 19:42:14 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ca4e91c
2025-05-05 19:42:14 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-05-05 19:42:14 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 19:42:14 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 19:42:14 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 19:42:14 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 19:42:14 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 19:42:14 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 19:42:14 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 19:42:14 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 19:42:14 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 19:42:14 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 19:42:14 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 19:42:14 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.035 seconds (process running for 138.433)
2025-05-05 19:42:14 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 19:58:26 WARN  [HikariPool-6 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Thread starvation or clock leap detected (housekeeper delta=3m11s608ms482µs400ns).
2025-05-05 22:41:37 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 22:41:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 9700 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 22:41:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 22:41:37 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 22:41:37 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 22:41:37 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 22:41:38 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2025-05-05 22:41:38 WARN  [restartedMain] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loggingAspect' of type [org.example.backendenicargy.Aspects.LoggingAspect] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractTransactionManagementConfiguration.transactionAttributeSource() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractTransactionManagementConfiguration.transactionAttributeSource()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProxyTransactionManagementConfiguration.transactionInterceptor(..) avec les arguments : [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource@ae2c6532]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProxyTransactionManagementConfiguration.transactionInterceptor(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProxyTransactionManagementConfiguration.transactionAdvisor(..) avec les arguments : [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource@ae2c6532, org.springframework.transaction.interceptor.TransactionInterceptor@19f050e3]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProxyTransactionManagementConfiguration.transactionAdvisor(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.setBeanClassLoader(java.lang.ClassLoader), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.beans.factory.config.BeanPostProcessor.postProcessBeforeInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.beans.factory.config.BeanPostProcessor.postProcessAfterInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.beans.factory.config.BeanPostProcessor.postProcessBeforeInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.beans.factory.config.BeanPostProcessor.postProcessAfterInitialization(java.lang.Object,java.lang.String) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException, class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.BeanClassLoaderAware.setBeanClassLoader(java.lang.ClassLoader), class org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat@4ea54b8, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat.tomcatServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat@4ea54b8, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration@3aa8181c, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.websocketServletWebServerCustomizer(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration@3aa8181c, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer@4c975c93, websocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer.customize(org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer.getOrder(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer.lambda$customize$0(org.apache.catalina.Context), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.WebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer@4c975c93, websocketServletWebServerCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration@1dc3c13c, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration.servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration.tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration@1dc3c13c, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.context.properties.BoundConfigurationProperties@12d2c389, org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.boot.context.properties.BoundConfigurationProperties org.springframework.boot.context.properties.BoundConfigurationProperties.get(org.springframework.context.ApplicationContext), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.context.properties.source.ConfigurationProperty org.springframework.boot.context.properties.BoundConfigurationProperties.get(org.springframework.boot.context.properties.source.ConfigurationPropertyName), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [void org.springframework.boot.context.properties.BoundConfigurationProperties.add(org.springframework.boot.context.properties.source.ConfigurationProperty), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [static void org.springframework.boot.context.properties.BoundConfigurationProperties.register(org.springframework.beans.factory.support.BeanDefinitionRegistry), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Map org.springframework.boot.context.properties.BoundConfigurationProperties.getAll(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.context.properties.BoundConfigurationProperties@12d2c389, org.springframework.boot.context.properties.BoundConfigurationProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.ServerProperties@4308d929, server-org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.net.InetAddress org.springframework.boot.autoconfigure.web.ServerProperties.getAddress(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Integer org.springframework.boot.autoconfigure.web.ServerProperties.getPort(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ErrorProperties org.springframework.boot.autoconfigure.web.ServerProperties.getError(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setPort(java.lang.Integer), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setSsl(org.springframework.boot.web.server.Ssl), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Ssl org.springframework.boot.autoconfigure.web.ServerProperties.getSsl(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy org.springframework.boot.autoconfigure.web.ServerProperties.getForwardHeadersStrategy(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setForwardHeadersStrategy(org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setMimeMappings(java.util.Map), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Shutdown org.springframework.boot.autoconfigure.web.ServerProperties.getShutdown(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.MimeMappings org.springframework.boot.autoconfigure.web.ServerProperties.getMimeMappings(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Reactive org.springframework.boot.autoconfigure.web.ServerProperties.getReactive(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Undertow org.springframework.boot.autoconfigure.web.ServerProperties.getUndertow(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Compression org.springframework.boot.autoconfigure.web.ServerProperties.getCompression(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.autoconfigure.web.ServerProperties.getServerHeader(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setServerHeader(java.lang.String), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Servlet org.springframework.boot.autoconfigure.web.ServerProperties.getServlet(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.util.unit.DataSize org.springframework.boot.autoconfigure.web.ServerProperties.getMaxHttpRequestHeaderSize(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setMaxHttpRequestHeaderSize(org.springframework.util.unit.DataSize), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.ServerProperties.setAddress(java.net.InetAddress), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Jetty org.springframework.boot.autoconfigure.web.ServerProperties.getJetty(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Netty org.springframework.boot.autoconfigure.web.ServerProperties.getNetty(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Http2 org.springframework.boot.autoconfigure.web.ServerProperties.getHttp2(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat org.springframework.boot.autoconfigure.web.ServerProperties.getTomcat(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.ServerProperties@4308d929, server-org.springframework.boot.autoconfigure.web.ServerProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletWebServerFactoryAutoConfiguration.servletWebServerFactoryCustomizer(..) avec les arguments : [org.springframework.boot.autoconfigure.web.ServerProperties@4308d929, org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider@1695da3, org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider@1085d4d5, org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider@66453958]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslProperties@4873499a, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles org.springframework.boot.autoconfigure.ssl.SslProperties.getBundle(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslProperties@4873499a, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration@4b27c466, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.ssl.DefaultSslBundleRegistry org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration.sslBundleRegistry(org.springframework.beans.factory.ObjectProvider), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.FileWatcher org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration.fileWatcher(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration.lambda$sslBundleRegistry$0(org.springframework.boot.ssl.DefaultSslBundleRegistry,org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration.sslPropertiesSslBundleRegistrar(org.springframework.boot.autoconfigure.ssl.FileWatcher), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration@4b27c466, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SslProperties.getBundle() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SslProperties.getBundle()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.FileWatcher@1bd6caed, fileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.ssl.FileWatcher.close() throws java.io.IOException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.nio.file.Path org.springframework.boot.autoconfigure.ssl.FileWatcher.resolveSymlinkIfNecessary(java.nio.file.Path) throws java.io.IOException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [void org.springframework.boot.autoconfigure.ssl.FileWatcher.watch(java.util.Set,java.lang.Runnable), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void java.io.Closeable.close() throws java.io.IOException, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void java.lang.AutoCloseable.close() throws java.lang.Exception, class org.springframework.boot.autoconfigure.ssl.FileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.FileWatcher@1bd6caed, fileWatcher]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SslProperties.getBundle() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SslProperties.getBundle()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar@4fac014c, sslPropertiesSslBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.registerBundles(org.springframework.boot.ssl.SslBundleRegistry,java.util.Map,java.util.function.BiFunction,java.util.function.Function), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.registerBundles(org.springframework.boot.ssl.SslBundleRegistry), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.watchForUpdates(org.springframework.boot.ssl.SslBundleRegistry,java.lang.String,java.util.function.Supplier,java.util.function.Supplier), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.Set org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.watchedPaths(java.lang.String,java.util.List), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.Set org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.watchedJksPaths(org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.Set org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.watchedPemPaths(org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.util.Set org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.lambda$registerBundles$1(java.util.function.Function,java.lang.String,org.springframework.boot.autoconfigure.ssl.SslBundleProperties), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.lambda$registerBundles$2(java.util.function.BiFunction,org.springframework.boot.ssl.SslBundleRegistry,java.util.function.Function,java.lang.String,org.springframework.boot.autoconfigure.ssl.SslBundleProperties), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.nio.file.Path org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.lambda$watchedPaths$4(org.springframework.boot.autoconfigure.ssl.BundleContentProperty), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.lambda$watchForUpdates$3(org.springframework.boot.ssl.SslBundleRegistry,java.lang.String,java.util.function.Supplier), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.boot.ssl.SslBundle org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar.lambda$registerBundles$0(java.util.function.BiFunction,org.springframework.boot.autoconfigure.ssl.SslBundleProperties), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar.registerBundles(org.springframework.boot.ssl.SslBundleRegistry), class org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar@4fac014c, sslPropertiesSslBundleRegistrar]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SslPropertiesBundleRegistrar.registerBundles(..) avec les arguments : [org.springframework.boot.ssl.DefaultSslBundleRegistry@28bfd8b1]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SslPropertiesBundleRegistrar.registerBundles(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.ssl.DefaultSslBundleRegistry@28bfd8b1, sslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.ssl.SslBundle org.springframework.boot.ssl.DefaultSslBundleRegistry.getBundle(java.lang.String), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.ssl.DefaultSslBundleRegistry.registerBundle(java.lang.String,org.springframework.boot.ssl.SslBundle), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.ssl.DefaultSslBundleRegistry.updateBundle(java.lang.String,org.springframework.boot.ssl.SslBundle), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle org.springframework.boot.ssl.DefaultSslBundleRegistry.getRegistered(java.lang.String) throws org.springframework.boot.ssl.NoSuchSslBundleException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.List org.springframework.boot.ssl.DefaultSslBundleRegistry.getBundleNames(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.boot.ssl.DefaultSslBundleRegistry.lambda$registerBundle$0(java.lang.String), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.ssl.DefaultSslBundleRegistry.addBundleUpdateHandler(java.lang.String,java.util.function.Consumer) throws org.springframework.boot.ssl.NoSuchSslBundleException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.ssl.SslBundleRegistry.registerBundle(java.lang.String,org.springframework.boot.ssl.SslBundle), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.ssl.SslBundleRegistry.updateBundle(java.lang.String,org.springframework.boot.ssl.SslBundle) throws org.springframework.boot.ssl.NoSuchSslBundleException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract org.springframework.boot.ssl.SslBundle org.springframework.boot.ssl.SslBundles.getBundle(java.lang.String) throws org.springframework.boot.ssl.NoSuchSslBundleException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.util.List org.springframework.boot.ssl.SslBundles.getBundleNames(), class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.ssl.SslBundles.addBundleUpdateHandler(java.lang.String,java.util.function.Consumer) throws org.springframework.boot.ssl.NoSuchSslBundleException, class org.springframework.boot.ssl.DefaultSslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.ssl.DefaultSslBundleRegistry@28bfd8b1, sslBundleRegistry]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletWebServerFactoryAutoConfiguration.servletWebServerFactoryCustomizer(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer@7e12712c, servletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.boot.ssl.SslBundles org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.lambda$customize$0(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.lambda$customize$2(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory,org.springframework.boot.web.servlet.WebListenerRegistrar), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.List org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.lambda$customize$1(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.WebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer@7e12712c, servletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletWebServerFactoryAutoConfiguration.tomcatServletWebServerFactoryCustomizer(..) avec les arguments : [org.springframework.boot.autoconfigure.web.ServerProperties@4308d929]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletWebServerFactoryAutoConfiguration.tomcatServletWebServerFactoryCustomizer(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer@b42401f, tomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.isAprAvailable(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.lambda$customizeUseRelativeRedirects$1(boolean,org.apache.catalina.Context), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.getUseApr(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customizeUseRelativeRedirects(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,boolean), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customizeRedirectContextRoot(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,boolean), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.lambda$customizeRedirectContextRoot$0(boolean,org.apache.catalina.Context), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.WebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer@b42401f, tomcatServletWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration@2be1c4f3, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.tomcatWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.tomcatVirtualThreadsProtocolHandlerCustomizer(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration@2be1c4f3, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebServerFactoryCustomizerConfiguration.tomcatWebServerFactoryCustomizer(..) avec les arguments : [ApplicationServletEnvironment {activeProfiles=[], defaultProfiles=[default], propertySources=[ConfigurationPropertySourcesPropertySource {name='configurationProperties'}, StubPropertySource {name='servletConfigInitParams'}, StubPropertySource {name='servletContextInitParams'}, PropertiesPropertySource {name='systemProperties'}, OriginAwareSystemEnvironmentPropertySource {name='systemEnvironment'}, RandomValuePropertySource {name='random'}, OriginTrackedMapPropertySource {name='Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''}, MapPropertySource {name='devtools'}, ApplicationInfoPropertySource {name='applicationInfo'}]}, org.springframework.boot.autoconfigure.web.ServerProperties@4308d929]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebServerFactoryCustomizerConfiguration.tomcatWebServerFactoryCustomizer(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer@4ccfd507, tomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.isPositive(int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.getOrder(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeRelaxedPathChars$18(java.lang.String,org.apache.catalina.connector.Connector), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeRelaxedQueryChars$19(java.lang.String,org.apache.catalina.connector.Connector), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeKeepAliveTimeout$17(java.time.Duration,org.apache.catalina.connector.Connector), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeErrorReportValve$24(org.apache.catalina.Context), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeMaxHttpFormPostSize$21(int,org.apache.catalina.connector.Connector), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$0(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$2(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$1(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxHttpResponseHeaderSize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.getOrDeduceUseForwardHeaders(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeStaticResources$23(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource,org.apache.catalina.Context), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxKeepAliveRequests(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxHttpRequestHeaderSize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeStaticResources$22(org.apache.catalina.Context,org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource,org.apache.catalina.LifecycleEvent), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxHttpFormPostSize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeKeepAliveTimeout(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.time.Duration), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeConnectionTimeout(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.time.Duration), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeStaticResources(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeRelaxedPathChars(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.String), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeRemoteIpValve(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeRelaxedQueryChars(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.String), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxSwallowSize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxQueueCapacity(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxThreads(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeAcceptCount(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMaxConnections(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeProcessorCache(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeErrorReportValve(org.springframework.boot.autoconfigure.web.ErrorProperties,org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeMinThreads(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customizeHandler$20(java.lang.Class,java.util.function.ObjIntConsumer,int,org.apache.catalina.connector.Connector), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$12(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$13(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.time.Duration), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$14(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$16(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.String), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$15(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.String), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$11(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$10(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeHandler(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,int,java.lang.Class,java.util.function.ObjIntConsumer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$9(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.time.Duration), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeAccessLog(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$3(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$7(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.lang.String org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.joinCharacters(java.util.List), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$5(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$4(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$8(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory,org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static boolean org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.lambda$customize$6(java.lang.Integer), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.WebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer@4ccfd507, tomcatWebServerFactoryCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration@42c1ccc5, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration.localeCharsetMappingsCustomizer(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.web.filter.CharacterEncodingFilter org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration.characterEncodingFilter(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration@42c1ccc5, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : HttpEncodingAutoConfiguration.localeCharsetMappingsCustomizer() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : HttpEncodingAutoConfiguration.localeCharsetMappingsCustomizer()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer@765febc6, localeCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.customize(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.WebServerFactoryCustomizer.customize(org.springframework.boot.web.server.WebServerFactory), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer@765febc6, localeCharsetMappingsCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebSocketServletWebServerCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebSocketServletWebServerCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatServletWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatServletWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatServletWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatServletWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : LocaleCharsetMappingsCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : LocaleCharsetMappingsCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebServerFactoryCustomizer.getOrder() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebServerFactoryCustomizer.getOrder()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebSocketServletWebServerCustomizer.customize(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebSocketServletWebServerCustomizer.customize(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletWebServerFactoryCustomizer.customize(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getPort() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getPort()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getAddress() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getAddress()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getSsl() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getSsl()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getCompression() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getCompression()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getHttp2() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getHttp2()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServerHeader() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServerHeader()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getShutdown() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getShutdown()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getMimeMappings() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getMimeMappings()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletWebServerFactoryCustomizer.customize(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatServletWebServerFactoryCustomizer.customize(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getTomcat() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getTomcat()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatServletWebServerFactoryCustomizer.customize(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatWebServerFactoryCustomizer.customize(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getTomcat() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getTomcat()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getTomcat() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getTomcat()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getForwardHeadersStrategy() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getForwardHeadersStrategy()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getMaxHttpRequestHeaderSize() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getMaxHttpRequestHeaderSize()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getTomcat() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getTomcat()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getError() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getError()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatWebServerFactoryCustomizer.customize(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : LocaleCharsetMappingsCustomizer.customize(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : LocaleCharsetMappingsCustomizer.customize(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration@c62b89a, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.servlet.error.DefaultErrorAttributes org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.errorAttributes(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.preserveErrorControllerTargetClassPostProcessor(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.errorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration@c62b89a, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration@28d6d5c7, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration@28d6d5c7, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration@3b57470a, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.web.servlet.DispatcherServlet org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration.dispatcherServlet(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.web.multipart.MultipartResolver org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration.multipartResolver(org.springframework.web.multipart.MultipartResolver), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration@3b57470a, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties@3729f33b, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getFormat(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getPathmatch(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getProblemdetails(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getView(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setDispatchOptionsRequest(boolean), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setDispatchTraceRequest(boolean), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getServlet(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getAsync(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.validation.DefaultMessageCodesResolver$Format org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getMessageCodesResolverFormat(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setMessageCodesResolverFormat(org.springframework.validation.DefaultMessageCodesResolver$Format), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.isPublishRequestHandledEvents(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setPublishRequestHandledEvents(boolean), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.isLogRequestDetails(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setLogRequestDetails(boolean), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.isDispatchOptionsRequest(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.isLogResolvedException(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setLogResolvedException(boolean), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getStaticPathPattern(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setStaticPathPattern(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.isDispatchTraceRequest(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getContentnegotiation(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.getWebjarsPathPattern(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.setWebjarsPathPattern(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties@3729f33b, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : DispatcherServletConfiguration.dispatcherServlet(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties@3729f33b]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.isDispatchOptionsRequest() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.isDispatchOptionsRequest()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.isDispatchTraceRequest() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.isDispatchTraceRequest()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.isPublishRequestHandledEvents() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.isPublishRequestHandledEvents()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.isLogRequestDetails() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.isLogRequestDetails()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : DispatcherServletConfiguration.dispatcherServlet(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.web.servlet.DispatcherServlet@5e6735d8, dispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.servlet.HandlerExecutionChain org.springframework.web.servlet.DispatcherServlet.getHandler(jakarta.servlet.http.HttpServletRequest) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.render(org.springframework.web.servlet.ModelAndView,jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.onRefresh(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.initStrategies(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.servlet.HandlerAdapter org.springframework.web.servlet.DispatcherServlet.getHandlerAdapter(java.lang.Object) throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final java.util.List org.springframework.web.servlet.DispatcherServlet.getHandlerMappings(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.context.i18n.LocaleContext org.springframework.web.servlet.DispatcherServlet.buildLocaleContext(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.servlet.View org.springframework.web.servlet.DispatcherServlet.resolveViewName(java.lang.String,java.util.Map,java.util.Locale,jakarta.servlet.http.HttpServletRequest) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.noHandlerFound(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initLocaleResolver(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final org.springframework.ui.context.ThemeSource org.springframework.web.servlet.DispatcherServlet.getThemeSource(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.cleanupMultipart(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initViewResolvers(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected jakarta.servlet.http.HttpServletRequest org.springframework.web.servlet.DispatcherServlet.checkMultipart(jakarta.servlet.http.HttpServletRequest) throws org.springframework.web.multipart.MultipartException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initThemeResolver(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.String org.springframework.web.servlet.DispatcherServlet.getDefaultViewName(jakarta.servlet.http.HttpServletRequest) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.web.servlet.DispatcherServlet.getRequestUri(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.Object org.springframework.web.servlet.DispatcherServlet.getDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.doDispatch(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.logRequest(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.DispatcherServlet.doService(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setDetectAllHandlerExceptionResolvers(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initHandlerMappings(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.Object org.springframework.web.servlet.DispatcherServlet.createDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.util.List org.springframework.web.servlet.DispatcherServlet.getDefaultStrategies(org.springframework.context.ApplicationContext,java.lang.Class), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletion(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,org.springframework.web.servlet.HandlerExecutionChain,java.lang.Exception) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initHandlerAdapters(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initMultipartResolver(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initFlashMapManager(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.applyDefaultViewName(jakarta.servlet.http.HttpServletRequest,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.servlet.ModelAndView org.springframework.web.servlet.DispatcherServlet.processHandlerException(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.processDispatchResult(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,org.springframework.web.servlet.HandlerExecutionChain,org.springframework.web.servlet.ModelAndView,java.lang.Exception) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static boolean org.springframework.web.servlet.DispatcherServlet.hasMultipartException(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.lang.String org.springframework.web.servlet.DispatcherServlet.lambda$logRequest$2(jakarta.servlet.http.HttpServletRequest,java.lang.Boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final org.springframework.web.multipart.MultipartResolver org.springframework.web.servlet.DispatcherServlet.getMultipartResolver(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setCleanupAfterInclude(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setDetectAllViewResolvers(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.web.servlet.DispatcherServlet.lambda$logRequest$1(jakarta.servlet.http.HttpServletRequest,java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.web.servlet.DispatcherServlet.lambda$logRequest$0(java.util.Map$Entry), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.web.servlet.View org.springframework.web.servlet.DispatcherServlet.resolveViewNameInternal(java.lang.String,java.util.Locale) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setThrowExceptionIfNoHandlerFound(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initHandlerExceptionResolvers(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.restoreAttributesAfterInclude(jakarta.servlet.http.HttpServletRequest,java.util.Map), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setDetectAllHandlerMappings(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.DispatcherServlet.initRequestToViewNameTranslator(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.DispatcherServlet.setDetectAllHandlerAdapters(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.util.Locale org.springframework.web.servlet.DispatcherServlet.lambda$buildLocaleContext$3(org.springframework.web.servlet.LocaleResolver,jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.destroy(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.service(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.doGet(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.doPut(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.refresh(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.applyInitializers(org.springframework.context.ConfigurableApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setNamespace(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.FrameworkServlet.getNamespace(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.onRefresh(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.FrameworkServlet.getContextId(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setApplicationContext(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.context.WebApplicationContext org.springframework.web.servlet.FrameworkServlet.findWebApplicationContext(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final org.springframework.web.context.WebApplicationContext org.springframework.web.servlet.FrameworkServlet.getWebApplicationContext(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.FrameworkServlet.initContextHolders(jakarta.servlet.http.HttpServletRequest,org.springframework.context.i18n.LocaleContext,org.springframework.web.context.request.RequestAttributes), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextId(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextClass(java.lang.Class), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setPublishContext(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setPublishEvents(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.processRequest(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.initServletBean() throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Class org.springframework.web.servlet.FrameworkServlet.getContextClass(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.web.servlet.FrameworkServlet.lambda$logResult$0(jakarta.servlet.http.HttpServletResponse,java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.context.ApplicationContextInitializer org.springframework.web.servlet.FrameworkServlet.loadInitializer(java.lang.String,org.springframework.context.ConfigurableApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.context.i18n.LocaleContext org.springframework.web.servlet.FrameworkServlet.buildLocaleContext(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.FrameworkServlet.logResult(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.Throwable,org.springframework.web.context.request.async.WebAsyncManager), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.doPost(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.FrameworkServlet.doDelete(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.doTrace(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract void org.springframework.web.servlet.FrameworkServlet.doService(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws java.lang.Exception, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.doOptions(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextAttribute(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setDispatchOptionsRequest(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(org.springframework.web.context.ConfigurableWebApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,long,java.lang.Throwable), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.context.request.ServletRequestAttributes org.springframework.web.servlet.FrameworkServlet.buildRequestAttributes(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,org.springframework.web.context.request.RequestAttributes), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextConfigLocation(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.String org.springframework.web.servlet.FrameworkServlet.getUsernameForRequest(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextInitializers(org.springframework.context.ApplicationContextInitializer[]), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.initFrameworkServlet() throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.web.servlet.FrameworkServlet.resetContextHolders(jakarta.servlet.http.HttpServletRequest,org.springframework.context.i18n.LocaleContext,org.springframework.web.context.request.RequestAttributes), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.context.WebApplicationContext org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.FrameworkServlet.getContextConfigLocation(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.FrameworkServlet.getContextAttribute(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setEnableLoggingRequestDetails(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.web.servlet.FrameworkServlet.isEnableLoggingRequestDetails(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.FrameworkServlet.postProcessWebApplicationContext(org.springframework.web.context.ConfigurableWebApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setContextInitializerClasses(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.FrameworkServlet.getServletContextAttributeName(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.context.WebApplicationContext org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(org.springframework.context.ApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.web.context.WebApplicationContext org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(org.springframework.web.context.WebApplicationContext), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setThreadContextInheritable(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.FrameworkServlet.setDispatchTraceRequest(boolean), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void org.springframework.web.servlet.HttpServletBean.init() throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.core.env.ConfigurableEnvironment org.springframework.web.servlet.HttpServletBean.createEnvironment(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.core.env.Environment org.springframework.web.servlet.HttpServletBean.getEnvironment(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.core.env.ConfigurableEnvironment org.springframework.web.servlet.HttpServletBean.getEnvironment(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.web.servlet.HttpServletBean.setEnvironment(org.springframework.core.env.Environment), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.HttpServletBean.initBeanWrapper(org.springframework.beans.BeanWrapper) throws org.springframework.beans.BeansException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.web.servlet.HttpServletBean.getServletName(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.web.servlet.HttpServletBean.initServletBean() throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.web.servlet.HttpServletBean.addRequiredProperty(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.http.HttpServlet.init(jakarta.servlet.ServletConfig) throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.service(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.http.HttpServlet.service(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected long jakarta.servlet.http.HttpServlet.getLastModified(jakarta.servlet.http.HttpServletRequest), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doGet(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doPut(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.reflect.Method[] jakarta.servlet.http.HttpServlet.getAllDeclaredMethods(java.lang.Class), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean jakarta.servlet.http.HttpServlet.isSensitiveHeader(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doPost(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doDelete(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doTrace(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doHead(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void jakarta.servlet.http.HttpServlet.doOptions(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void jakarta.servlet.http.HttpServlet.sendMethodNotAllowed(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.lang.String jakarta.servlet.http.HttpServlet.getCachedAllowHeaderValue(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void jakarta.servlet.http.HttpServlet.maybeSetLastModified(jakarta.servlet.http.HttpServletResponse,long), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.GenericServlet.log(java.lang.String,java.lang.Throwable), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.GenericServlet.log(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.GenericServlet.init(jakarta.servlet.ServletConfig) throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.GenericServlet.init() throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void jakarta.servlet.GenericServlet.destroy(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void jakarta.servlet.GenericServlet.service(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.ServletConfig jakarta.servlet.GenericServlet.getServletConfig(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.ServletContext jakarta.servlet.GenericServlet.getServletContext(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String jakarta.servlet.GenericServlet.getServletInfo(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Enumeration jakarta.servlet.GenericServlet.getInitParameterNames(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String jakarta.servlet.GenericServlet.getInitParameter(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String jakarta.servlet.GenericServlet.getServletName(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.context.ApplicationContextAware.setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract org.springframework.core.env.Environment org.springframework.core.env.EnvironmentCapable.getEnvironment(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.context.EnvironmentAware.setEnvironment(org.springframework.core.env.Environment), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void jakarta.servlet.Servlet.init(jakarta.servlet.ServletConfig) throws jakarta.servlet.ServletException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void jakarta.servlet.Servlet.destroy(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void jakarta.servlet.Servlet.service(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse) throws jakarta.servlet.ServletException,java.io.IOException, class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract jakarta.servlet.ServletConfig jakarta.servlet.Servlet.getServletConfig(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.String jakarta.servlet.Servlet.getServletInfo(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract jakarta.servlet.ServletContext jakarta.servlet.ServletConfig.getServletContext(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.util.Enumeration jakarta.servlet.ServletConfig.getInitParameterNames(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.String jakarta.servlet.ServletConfig.getInitParameter(java.lang.String), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.String jakarta.servlet.ServletConfig.getServletName(), class org.springframework.web.servlet.DispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.web.servlet.DispatcherServlet@5e6735d8, dispatcherServlet]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : DispatcherServletRegistrationConfiguration.dispatcherServletRegistration(..) avec les arguments : [org.springframework.web.servlet.DispatcherServlet@5e6735d8, org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties@3729f33b, org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider@52c77bb4]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : WebMvcProperties.getServlet() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : WebMvcProperties.getServlet()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.MultipartProperties@a63d132, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.getLocation(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setEnabled(boolean), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.getEnabled(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setLocation(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.util.unit.DataSize org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.getMaxFileSize(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.util.unit.DataSize org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.getMaxRequestSize(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setResolveLazily(boolean), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.util.unit.DataSize org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.getFileSizeThreshold(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setStrictServletCompliance(boolean), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.isStrictServletCompliance(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.MultipartConfigElement org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.createMultipartConfig(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setFileSizeThreshold(org.springframework.util.unit.DataSize), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setMaxFileSize(org.springframework.util.unit.DataSize), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.setMaxRequestSize(org.springframework.util.unit.DataSize), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.isResolveLazily(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.MultipartProperties@a63d132, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration@44518b49, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.web.multipart.support.StandardServletMultipartResolver org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration.multipartResolver(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.MultipartConfigElement org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration.multipartConfigElement(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration@44518b49, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : MultipartAutoConfiguration.multipartConfigElement() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : MultipartProperties.createMultipartConfig() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : MultipartProperties.createMultipartConfig()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : MultipartAutoConfiguration.multipartConfigElement()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [jakarta.servlet.MultipartConfigElement@7091bf26, multipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String jakarta.servlet.MultipartConfigElement.getLocation(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public long jakarta.servlet.MultipartConfigElement.getMaxFileSize(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public long jakarta.servlet.MultipartConfigElement.getMaxRequestSize(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int jakarta.servlet.MultipartConfigElement.getFileSizeThreshold(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class jakarta.servlet.MultipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [jakarta.servlet.MultipartConfigElement@7091bf26, multipartConfigElement]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : DispatcherServletRegistrationConfiguration.dispatcherServletRegistration(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [dispatcherServlet urls=[/], dispatcherServletRegistration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean.getPath(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean.setUrlMappings(java.util.Collection), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean.addUrlMappings(java.lang.String[]), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getPrefix(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getRelativePath(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getServletUrlMapping(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.ServletRegistrationBean.toString(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.ServletRegistrationBean.configure(jakarta.servlet.Registration$Dynamic), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.ServletRegistrationBean.configure(jakarta.servlet.ServletRegistration$Dynamic), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.String org.springframework.boot.web.servlet.ServletRegistrationBean.getDescription(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.ServletRegistrationBean.getServletName(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.ServletRegistrationBean.setLoadOnStartup(int), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected jakarta.servlet.ServletRegistration$Dynamic org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected jakarta.servlet.Registration$Dynamic org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.ServletRegistrationBean.setUrlMappings(java.util.Collection), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.MultipartConfigElement org.springframework.boot.web.servlet.ServletRegistrationBean.getMultipartConfig(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.servlet.ServletRegistrationBean.getUrlMappings(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.ServletRegistrationBean.setMultipartConfig(jakarta.servlet.MultipartConfigElement), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.ServletRegistrationBean.addUrlMappings(java.lang.String[]), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.Servlet org.springframework.boot.web.servlet.ServletRegistrationBean.getServlet(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.ServletRegistrationBean.setServlet(jakarta.servlet.Servlet), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.boot.web.servlet.DynamicRegistrationBean.register(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setName(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.DynamicRegistrationBean.configure(jakarta.servlet.Registration$Dynamic), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setBeanName(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.DynamicRegistrationBean.isAsyncSupported(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setIgnoreRegistrationFailure(boolean), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.addInitParameter(java.lang.String,java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.lang.String org.springframework.boot.web.servlet.DynamicRegistrationBean.getOrDeduceName(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract jakarta.servlet.Registration$Dynamic org.springframework.boot.web.servlet.DynamicRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Map org.springframework.boot.web.servlet.DynamicRegistrationBean.getInitParameters(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setInitParameters(java.util.Map), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setAsyncSupported(boolean), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.RegistrationBean.isEnabled(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract void org.springframework.boot.web.servlet.RegistrationBean.register(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract java.lang.String org.springframework.boot.web.servlet.RegistrationBean.getDescription(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.web.servlet.RegistrationBean.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.RegistrationBean.setOrder(int), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.RegistrationBean.setEnabled(boolean), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void org.springframework.boot.web.servlet.RegistrationBean.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getPath(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getPrefix(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getRelativePath(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.String org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath.getServletUrlMapping(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.BeanNameAware.setBeanName(java.lang.String), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.ServletContextInitializer.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException, class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 WARN  [restartedMain] o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.boot.web.servlet.RegistrationBean.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [dispatcherServlet urls=[/], dispatcherServletRegistration]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ErrorMvcAutoConfiguration.errorPageCustomizer(..) avec les arguments : [dispatcherServlet urls=[/]]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ErrorMvcAutoConfiguration.errorPageCustomizer(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer@6daa09d7, errorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer.registerErrorPages(org.springframework.boot.web.server.ErrorPageRegistry), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ErrorPageRegistrar.registerErrorPages(org.springframework.boot.web.server.ErrorPageRegistry), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer@6daa09d7, errorPageCustomizer]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ErrorPageCustomizer.registerErrorPages(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServerProperties.getError() avec les arguments : []
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServerProperties.getError()
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : DispatcherServletPath.getRelativePath(..) avec les arguments : [/error]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : DispatcherServletPath.getRelativePath(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ErrorPageCustomizer.registerErrorPages(..)
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814, tomcatServletWebServerFactory]
2025-05-05 22:41:38 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [static java.util.List org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.access$000(org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(org.apache.catalina.Host,org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setResourceLoader(org.springframework.core.io.ResourceLoader), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.WebServer org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setProtocol(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addContextCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setMimeMappings(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.nio.charset.Charset org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getUriEncoding(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setUriEncoding(java.nio.charset.Charset), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected org.springframework.boot.web.embedded.tomcat.TomcatWebServer org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(org.apache.catalina.startup.Tomcat), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeProtocol(org.apache.coyote.AbstractProtocol), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configureSession(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addJspServlet(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private boolean org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.isZeroOrLess(java.time.Duration), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addLocaleMappings(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addDefaultServlet(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configureContext(org.apache.catalina.Context,org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configureEngine(org.apache.catalina.Engine), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.postProcessContext(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(org.apache.catalina.connector.Connector), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(org.apache.catalina.connector.Connector), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setEngineValves(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Set org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTldSkipPatterns(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getContextValves(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addContextValves(org.apache.catalina.Valve[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addTldSkipPatterns(java.lang.String[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getEngineValves(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addEngineValves(org.apache.catalina.Valve[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setContextValves(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setBaseDirectory(java.io.File), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setTldSkipPatterns(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setBackgroundProcessorDelay(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addBundleUpdateHandler(java.lang.String,java.lang.String,org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addAdditionalTomcatConnectors(org.apache.catalina.connector.Connector[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatConnectorCustomizers(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatContextCustomizers(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatProtocolHandlerCustomizers(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.List org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getDefaultServerLifecycleListeners(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setContextLifecycleListeners(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addContextLifecycleListeners(org.apache.catalina.LifecycleListener[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getContextLifecycleListeners(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setTomcatContextCustomizers(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.invokeProtocolHandlerCustomizers(org.apache.coyote.ProtocolHandler), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setTomcatConnectorCustomizers(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addProtocolHandlerCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setTomcatProtocolHandlerCustomizers(java.util.Collection), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$invokeProtocolHandlerCustomizers$3(org.apache.coyote.ProtocolHandler,org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setUseApr(boolean), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$addBundleUpdateHandler$5(org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer,java.lang.String,org.springframework.boot.ssl.SslBundle), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$configureCookieProcessor$6(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.String org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$configurePersistSession$7(org.apache.catalina.Manager), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.List org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getAdditionalTomcatConnectors(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.setDisableMBeanRegistry(boolean), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addConnectorCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private long org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getSessionTimeoutInMinutes(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$prepareContext$0(org.apache.catalina.WebResourceRoot), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configureTldPatterns(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.addJasperInitializer(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$addLocaleMappings$2(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext,java.util.Locale,java.nio.charset.Charset), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configurePersistSession(org.apache.catalina.Manager), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.resetDefaultLocaleMapping(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.ignoringNoSuchMethodError(java.lang.Runnable), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.registerConnectorExecutor(org.apache.catalina.startup.Tomcat,org.apache.catalina.connector.Connector), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$prepareContext$1(org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.lambda$customizeSsl$4(org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer,org.springframework.boot.web.server.Ssl$ServerNameSslBundle), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.configureCookieProcessor(org.apache.catalina.Context), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getDisplayName(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setInitializers(java.util.List), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.addInitializers(org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setDisplayName(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getContextPath(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.servlet.server.Session org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getSession(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setMimeMappings(org.springframework.boot.web.server.MimeMappings), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.MimeMappings org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getMimeMappings(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setContextPath(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final org.springframework.boot.web.servlet.ServletContextInitializer[] org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.mergeInitializers(org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.io.File org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getDocumentRoot(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.addWebListeners(java.lang.String[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.checkContextPath(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.addMimeMappings(org.springframework.boot.web.server.MimeMappings), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setDocumentRoot(java.io.File), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Map org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getInitParameters(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setInitParameters(java.util.Map), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.util.List org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getUrlsOfJarsWithMetaInfResources(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setSession(org.springframework.boot.web.servlet.server.Session), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setJsp(org.springframework.boot.web.servlet.server.Jsp), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.servlet.server.Jsp org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getJsp(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.isRegisterDefaultServlet(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setRegisterDefaultServlet(boolean), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.util.Set org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getWebListenerClassNames(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.io.File org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidSessionStoreDir(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.io.File org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidSessionStoreDir(boolean), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setCookieSameSiteSuppliers(java.util.List), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.lambda$mergeInitializers$1(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.addCookieSameSiteSuppliers(org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.List org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getCookieSameSiteSuppliers(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.lambda$addMimeMappings$0(org.springframework.boot.web.server.MimeMappings$Mapping), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.setLocaleCharsetMappings(java.util.Map), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.io.File org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected boolean org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.shouldRegisterJspServlet(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Map org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getLocaleCharsetMappings(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.net.InetAddress org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getAddress(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getPort(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setPort(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setSsl(org.springframework.boot.web.server.Ssl), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Ssl org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getSsl(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Shutdown org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getShutdown(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Compression org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getCompression(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getServerHeader(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setServerHeader(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.ssl.SslBundles org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getSslBundles(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final org.springframework.boot.ssl.SslBundle org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getSslBundle(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Set org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getErrorPages(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.io.File org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setSslBundles(org.springframework.boot.ssl.SslBundles), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.addErrorPages(org.springframework.boot.web.server.ErrorPage[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setErrorPages(java.util.Set), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setCompression(org.springframework.boot.web.server.Compression), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setAddress(java.net.InetAddress), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.server.Http2 org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getHttp2(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.setHttp2(org.springframework.boot.web.server.Http2), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.boot.ssl.SslBundle org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.lambda$getServerNameSslBundles$0(org.springframework.boot.web.server.Ssl$ServerNameSslBundle), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.util.Map org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getServerNameSslBundles(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.addContextCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.setUriEncoding(java.nio.charset.Charset), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.addEngineValves(org.apache.catalina.Valve[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.setBaseDirectory(java.io.File), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.setBackgroundProcessorDelay(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.addProtocolHandlerCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory.addConnectorCustomizers(org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setPort(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSsl(org.springframework.boot.web.server.Ssl), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setServerHeader(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSslBundles(org.springframework.boot.ssl.SslBundles), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setErrorPages(java.util.Set), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setCompression(org.springframework.boot.web.server.Compression), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setAddress(java.net.InetAddress), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setHttp2(org.springframework.boot.web.server.Http2), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ErrorPageRegistry.addErrorPages(org.springframework.boot.web.server.ErrorPage[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.context.ResourceLoaderAware.setResourceLoader(org.springframework.core.io.ResourceLoader), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setInitializers(java.util.List), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.addInitializers(org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setDisplayName(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setMimeMappings(org.springframework.boot.web.server.MimeMappings), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setContextPath(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.addMimeMappings(org.springframework.boot.web.server.MimeMappings), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setDocumentRoot(java.io.File), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setInitParameters(java.util.Map), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setSession(org.springframework.boot.web.servlet.server.Session), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setJsp(org.springframework.boot.web.servlet.server.Jsp), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setRegisterDefaultServlet(boolean), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setCookieSameSiteSuppliers(java.util.List), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.addCookieSameSiteSuppliers(org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory.setLocaleCharsetMappings(java.util.Map), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setPort(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSsl(org.springframework.boot.web.server.Ssl), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setServerHeader(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSslBundles(org.springframework.boot.ssl.SslBundles), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setErrorPages(java.util.Set), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setCompression(org.springframework.boot.web.server.Compression), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setAddress(java.net.InetAddress), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setHttp2(org.springframework.boot.web.server.Http2), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ErrorPageRegistry.addErrorPages(org.springframework.boot.web.server.ErrorPage[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract org.springframework.boot.web.server.WebServer org.springframework.boot.web.servlet.server.ServletWebServerFactory.getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.WebListenerRegistry.addWebListeners(java.lang.String[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setPort(int), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSsl(org.springframework.boot.web.server.Ssl), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void org.springframework.boot.web.server.ConfigurableWebServerFactory.setShutdown(org.springframework.boot.web.server.Shutdown), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setServerHeader(java.lang.String), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setSslBundles(org.springframework.boot.ssl.SslBundles), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setErrorPages(java.util.Set), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setCompression(org.springframework.boot.web.server.Compression), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setAddress(java.net.InetAddress), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ConfigurableWebServerFactory.setHttp2(org.springframework.boot.web.server.Http2), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.server.ErrorPageRegistry.addErrorPages(org.springframework.boot.web.server.ErrorPage[]), class org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory@40e60814, tomcatServletWebServerFactory]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : TomcatServletWebServerFactory.getWebServer(..) avec les arguments : [[org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$$Lambda/0x000001b38153eca8@636d271e]]
2025-05-05 22:41:39 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 22:41:39 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 22:41:39 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 22:41:39 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 22:41:39 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 22:41:39 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2060 ms
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration@e920328, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.EnumSet org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration.getDispatcherTypes(org.springframework.boot.autoconfigure.security.SecurityProperties), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration.securityFilterChainRegistration(org.springframework.boot.autoconfigure.security.SecurityProperties), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static jakarta.servlet.DispatcherType org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration.lambda$getDispatcherTypes$0(org.springframework.boot.web.servlet.DispatcherType), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.util.EnumSet org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration.lambda$getDispatcherTypes$1(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration@e920328, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.security.SecurityProperties@5b2a4d07, spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.security.SecurityProperties$Filter org.springframework.boot.autoconfigure.security.SecurityProperties.getFilter(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.boot.autoconfigure.security.SecurityProperties$User org.springframework.boot.autoconfigure.security.SecurityProperties.getUser(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.boot.autoconfigure.security.SecurityProperties@5b2a4d07, spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SecurityFilterAutoConfiguration.securityFilterChainRegistration(..) avec les arguments : [org.springframework.boot.autoconfigure.security.SecurityProperties@5b2a4d07]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SecurityProperties.getFilter() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SecurityProperties.getFilter()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SecurityProperties.getFilter() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SecurityProperties.getFilter()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : SecurityProperties.getFilter() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SecurityProperties.getFilter()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : SecurityFilterAutoConfiguration.securityFilterChainRegistration(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [springSecurityFilterChain urls=[/*] order=-100, securityFilterChainRegistration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public jakarta.servlet.Filter org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.getFilter(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.web.filter.DelegatingFilterProxy org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.getFilter(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.web.context.WebApplicationContext org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.getWebApplicationContext(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.String org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.getTargetBeanName(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.toString(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract jakarta.servlet.Filter org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getFilter(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(jakarta.servlet.FilterRegistration$Dynamic), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(jakarta.servlet.Registration$Dynamic), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.lang.String org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getDescription(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setServletRegistrationBeans(java.util.Collection), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getServletRegistrationBeans(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.addServletRegistrationBeans(org.springframework.boot.web.servlet.ServletRegistrationBean[]), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getFilterName(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setMatchAfter(boolean), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getUrlPatterns(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setUrlPatterns(java.util.Collection), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.addServletNames(java.lang.String[]), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.addUrlPatterns(java.lang.String[]), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setDispatcherTypes(java.util.EnumSet), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setDispatcherTypes(jakarta.servlet.DispatcherType,jakarta.servlet.DispatcherType[]), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.setServletNames(java.util.Collection), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Collection org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.getServletNames(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.isMatchAfter(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected jakarta.servlet.Registration$Dynamic org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected jakarta.servlet.FilterRegistration$Dynamic org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.EnumSet org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.determineDispatcherTypes(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final void org.springframework.boot.web.servlet.DynamicRegistrationBean.register(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setName(java.lang.String), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.boot.web.servlet.DynamicRegistrationBean.configure(jakarta.servlet.Registration$Dynamic), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setBeanName(java.lang.String), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.DynamicRegistrationBean.isAsyncSupported(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setIgnoreRegistrationFailure(boolean), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.addInitParameter(java.lang.String,java.lang.String), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected final java.lang.String org.springframework.boot.web.servlet.DynamicRegistrationBean.getOrDeduceName(java.lang.Object), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract jakarta.servlet.Registration$Dynamic org.springframework.boot.web.servlet.DynamicRegistrationBean.addRegistration(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Map org.springframework.boot.web.servlet.DynamicRegistrationBean.getInitParameters(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setInitParameters(java.util.Map), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.DynamicRegistrationBean.setAsyncSupported(boolean), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.boot.web.servlet.RegistrationBean.isEnabled(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract void org.springframework.boot.web.servlet.RegistrationBean.register(java.lang.String,jakarta.servlet.ServletContext), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected abstract java.lang.String org.springframework.boot.web.servlet.RegistrationBean.getDescription(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.boot.web.servlet.RegistrationBean.getOrder(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.RegistrationBean.setOrder(int), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.boot.web.servlet.RegistrationBean.setEnabled(boolean), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void org.springframework.boot.web.servlet.RegistrationBean.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.context.ApplicationContextAware.setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.BeanNameAware.setBeanName(java.lang.String), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.boot.web.servlet.ServletContextInitializer.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException, class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract int org.springframework.core.Ordered.getOrder(), class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 WARN  [restartedMain] o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.boot.web.servlet.RegistrationBean.onStartup(jakarta.servlet.ServletContext) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [springSecurityFilterChain urls=[/*] order=-100, securityFilterChainRegistration]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : RegistrationBean.getOrder() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : RegistrationBean.getOrder()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : RegistrationBean.getOrder() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : RegistrationBean.getOrder()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ServletRegistrationBean.getServlet() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ServletRegistrationBean.getServlet()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.example.backendenicargy.Security.JwtService@1599e847, jwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.example.backendenicargy.Security.JwtService.generateToken(org.springframework.security.core.userdetails.UserDetails), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.example.backendenicargy.Security.JwtService.generateToken(java.util.Map,org.springframework.security.core.userdetails.UserDetails), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private io.jsonwebtoken.Claims org.example.backendenicargy.Security.JwtService.extractAllClaims(java.lang.String), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.example.backendenicargy.Security.JwtService.isTokenValid(java.lang.String,org.springframework.security.core.userdetails.UserDetails), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.security.Key org.example.backendenicargy.Security.JwtService.getSigningKey(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.example.backendenicargy.Security.JwtService.extractUsername(java.lang.String), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.lang.Boolean org.example.backendenicargy.Security.JwtService.isTokenExpired(java.lang.String), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.example.backendenicargy.Security.JwtService.extractClaim(java.lang.String,java.util.function.Function), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.example.backendenicargy.Security.JwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.example.backendenicargy.Security.JwtService@1599e847, jwtService]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean@604a6ef8, jpa.named-queries#3]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.util.Properties org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.createProperties() throws java.io.IOException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.getObject() throws java.lang.Exception, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.data.repository.core.support.PropertiesBasedNamedQueries org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.getObject() throws java.io.IOException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.getObjectType(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.isSingleton(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.afterPropertiesSet() throws java.io.IOException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean.setSingleton(boolean), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.beans.factory.FactoryBean.isSingleton(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setProperties(java.util.Properties), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(java.util.Properties) throws java.io.IOException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setLocation(org.springframework.core.io.Resource), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setLocations(org.springframework.core.io.Resource[]), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setLocalOverride(boolean), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected java.util.Properties org.springframework.core.io.support.PropertiesLoaderSupport.mergeProperties() throws java.io.IOException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setPropertiesArray(java.util.Properties[]), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setFileEncoding(java.lang.String), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setPropertiesPersister(org.springframework.util.PropertiesPersister), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.core.io.support.PropertiesLoaderSupport.setIgnoreResourceNotFound(boolean), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.Object org.springframework.beans.factory.FactoryBean.getObject() throws java.lang.Exception, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.Class org.springframework.beans.factory.FactoryBean.getObjectType(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.beans.factory.FactoryBean.isSingleton(), class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.InitializingBean.afterPropertiesSet() throws java.lang.Exception, class org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean@604a6ef8, jpa.named-queries#3]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : PropertiesBasedNamedQueriesFactoryBean.isSingleton() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : PropertiesBasedNamedQueriesFactoryBean.isSingleton()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : PropertiesBasedNamedQueriesFactoryBean.getObject() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : PropertiesBasedNamedQueriesFactoryBean.getObject()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.data.repository.core.support.PropertiesBasedNamedQueries.getQuery(java.lang.String), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.data.repository.core.support.PropertiesBasedNamedQueries.hasQuery(java.lang.String), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.String org.springframework.data.repository.core.NamedQueries.getQuery(java.lang.String), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract boolean org.springframework.data.repository.core.NamedQueries.hasQuery(java.lang.String), class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries@64abd3e0, jpa.named-queries#3]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..) avec les arguments : [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean@1b606468, jpa.UserRepository.fragments#0]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessBeforeInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.getObject() throws java.lang.Exception, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.getObject() throws java.lang.Exception, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.getObjectType(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public void org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.afterPropertiesSet(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.data.repository.core.support.RepositoryFragment org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean.lambda$afterPropertiesSet$0(java.lang.String), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.beans.factory.FactoryBean.isSingleton(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.Object org.springframework.beans.factory.FactoryBean.getObject() throws java.lang.Exception, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.Class org.springframework.beans.factory.FactoryBean.getObjectType(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.beans.factory.FactoryBean.isSingleton(), class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract void org.springframework.beans.factory.InitializingBean.afterPropertiesSet() throws java.lang.Exception, class org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..) avec les arguments : [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean@1b606468, jpa.UserRepository.fragments#0]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ProjectingArgumentResolverBeanPostProcessor.postProcessAfterInitialization(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : FactoryBean.isSingleton() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : FactoryBean.isSingleton()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : RepositoryFragmentsFactoryBean.getObject() avec les arguments : []
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : RepositoryFragmentsFactoryBean.getObject()
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..) avec les arguments : [class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AnnotationTransactionAttributeSource.isCandidateClass(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.Object org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Object[]) throws java.lang.Throwable, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [java.lang.Object org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(java.lang.Class,org.springframework.data.repository.core.support.RepositoryInvocationMulticaster,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Object[]) throws java.lang.Throwable, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.size(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.equals(java.lang.Object), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.toString(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.append(org.springframework.data.repository.core.support.RepositoryFragment), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.append(org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public int org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.hashCode(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.Iterator org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.iterator(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.of(org.springframework.data.repository.core.support.RepositoryFragment[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.concat(java.util.stream.Stream,java.util.stream.Stream), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.from(java.util.List), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.empty(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.util.stream.Stream org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.methods(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.reflect.Method org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.findMethod(org.springframework.data.repository.core.support.MethodLookup$InvokedMethod,org.springframework.data.repository.core.support.MethodLookup,java.util.function.Supplier), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [java.util.List org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.getFragments(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private org.springframework.data.repository.core.support.RepositoryFragment org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.findImplementationFragment(java.lang.reflect.Method), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static boolean org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.lambda$findMethod$3(org.springframework.data.repository.core.support.MethodLookup$MethodPredicate,org.springframework.data.repository.core.support.MethodLookup$InvokedMethod,java.lang.reflect.Method), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.just(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static boolean org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.lambda$findImplementationFragment$1(org.springframework.data.repository.core.support.RepositoryFragment), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static boolean org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.lambda$findImplementationFragment$0(java.lang.reflect.Method,org.springframework.data.repository.core.support.RepositoryFragment), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.lang.IllegalArgumentException org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.lambda$findImplementationFragment$2(java.lang.reflect.Method), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.stream.Stream org.springframework.data.util.Streamable.get(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.data.util.Streamable.get(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.data.util.Streamable.isEmpty(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.map(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.List org.springframework.data.util.Streamable.toList(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.stream.Stream org.springframework.data.util.Streamable.stream(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.filter(java.util.function.Predicate), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.flatMap(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.Set org.springframework.data.util.Streamable.toSet(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.lang.Iterable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.util.function.Supplier), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(org.springframework.data.util.Streamable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.Spliterator java.lang.Iterable.spliterator(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void java.lang.Iterable.forEach(java.util.function.Consumer), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected void java.lang.Object.finalize() throws java.lang.Throwable, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private final native void java.lang.Object.wait0(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public boolean java.lang.Object.equals(java.lang.Object), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public java.lang.String java.lang.Object.toString(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public native int java.lang.Object.hashCode(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native java.lang.Class java.lang.Object.getClass(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notify(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final native void java.lang.Object.notifyAll(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public final void java.lang.Object.wait() throws java.lang.InterruptedException, class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.stream.Stream org.springframework.data.util.Streamable.get(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.lang.Object org.springframework.data.util.Streamable.get(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default boolean org.springframework.data.util.Streamable.isEmpty(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.map(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.List org.springframework.data.util.Streamable.toList(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.stream.Stream org.springframework.data.util.Streamable.stream(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.util.Streamable org.springframework.data.util.Streamable.of(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.util.Streamable org.springframework.data.util.Streamable.of(java.lang.Iterable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.util.Streamable org.springframework.data.util.Streamable.of(java.util.function.Supplier), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.filter(java.util.function.Predicate), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static org.springframework.data.util.Streamable org.springframework.data.util.Streamable.empty(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.flatMap(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.Set org.springframework.data.util.Streamable.toSet(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.lang.Iterable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.util.function.Supplier), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default org.springframework.data.util.Streamable org.springframework.data.util.Streamable.and(org.springframework.data.util.Streamable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private static java.util.Iterator org.springframework.data.util.Streamable.lambda$of$0(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$flatMap$2(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static java.util.stream.Collector org.springframework.data.util.Streamable.toStreamable(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public static java.util.stream.Collector org.springframework.data.util.Streamable.toStreamable(java.util.stream.Collector), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$and$4(java.util.function.Supplier), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$and$5(java.lang.Object[]), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$filter$3(java.util.function.Predicate), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$map$1(java.util.function.Function), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [private java.util.stream.Stream org.springframework.data.util.Streamable.lambda$and$6(java.lang.Iterable), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.Spliterator java.lang.Iterable.spliterator(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void java.lang.Iterable.forEach(java.util.function.Consumer), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.util.Iterator java.lang.Iterable.iterator(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default java.util.Spliterator java.lang.Iterable.spliterator(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public default void java.lang.Iterable.forEach(java.util.function.Consumer), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..) avec les arguments : [public abstract java.lang.Object java.util.function.Supplier.get(), class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AbstractFallbackTransactionAttributeSource.hasTransactionAttribute(..)
2025-05-05 22:41:39 ERROR [restartedMain] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'userRepository': Error creating bean with name 'userRepository' defined in org.example.backendenicargy.Repositories.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpa.UserRepository.fragments#0' while setting bean property 'repositoryFragments'
2025-05-05 22:41:39 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-05 22:41:39 INFO  [restartedMain] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : TomcatServletWebServerFactory.getWebServer(..)
2025-05-05 22:41:39 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-05-05 22:41:39 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-05 22:41:39 ERROR [restartedMain] o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at org.example.backendenicargy.BackendEnicargyApplication.main(BackendEnicargyApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory$$SpringCGLIB$$0.getWebServer(<generated>)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtFilter': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'userRepository': Error creating bean with name 'userRepository' defined in org.example.backendenicargy.Repositories.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpa.UserRepository.fragments#0' while setting bean property 'repositoryFragments'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 29 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailsServiceImpl': Unsatisfied dependency expressed through field 'userRepository': Error creating bean with name 'userRepository' defined in org.example.backendenicargy.Repositories.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpa.UserRepository.fragments#0' while setting bean property 'repositoryFragments'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 71 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in org.example.backendenicargy.Repositories.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpa.UserRepository.fragments#0' while setting bean property 'repositoryFragments'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpa.UserRepository.fragments#0': Post-processing of FactoryBean's singleton object failed
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:143)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1884)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:349)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 97 common frames omitted
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments: Common causes of this problem include using a final class or a non-visible class
	at org.springframework.aop.framework.CglibAopProxy.buildProxy(CglibAopProxy.java:237)
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:167)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildProxy(AbstractAutoProxyCreator.java:518)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:465)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:370)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:319)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1933)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:140)
	... 102 common frames omitted
Caused by: java.lang.IllegalArgumentException: No visible constructors in class org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments
	at org.springframework.cglib.proxy.Enhancer.filterConstructors(Enhancer.java:755)
	at org.springframework.cglib.proxy.Enhancer.generateClass(Enhancer.java:656)
	at org.springframework.cglib.transform.TransformingClassGenerator.generateClass(TransformingClassGenerator.java:35)
	at org.springframework.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:26)
	at org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy.generate(ClassLoaderAwareGeneratorStrategy.java:76)
	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:370)
	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:575)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.lambda$new$1(AbstractClassGenerator.java:107)
	at org.springframework.cglib.core.internal.LoadingCache.lambda$createEntry$1(LoadingCache.java:52)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:57)
	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:129)
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:321)
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:562)
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:407)
	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:62)
	at org.springframework.aop.framework.CglibAopProxy.buildProxy(CglibAopProxy.java:228)
	... 111 common frames omitted
2025-05-05 23:00:19 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 23:00:19 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 16876 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:00:19 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:00:19 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 23:00:19 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 23:00:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:00:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-05-05 23:00:21 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:00:21 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:00:21 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:00:21 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:00:21 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:00:21 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1382 ms
2025-05-05 23:00:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:00:21 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-05 23:00:21 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:00:21 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:00:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-05 23:00:22 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c09ad8e
2025-05-05 23:00:22 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-05 23:00:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:00:22 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:00:22 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:00:23 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:00:23 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:00:24 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:00:24 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-05 23:00:24 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:00:25 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:00:25 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:00:25 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:00:25 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:00:25 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.284 seconds (process running for 7.058)
2025-05-05 23:01:26 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:01:26 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:01:26 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:01:26 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:01:26 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:01:26 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:01:26 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-05 23:01:26 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-05 23:01:26 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 16876 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:01:26 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:01:26 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:01:26 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.
2025-05-05 23:01:26 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:01:26 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:01:26 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:01:26 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:01:27 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:01:27 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 752 ms
2025-05-05 23:01:27 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:01:27 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:01:27 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:01:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 23:01:27 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d7da338
2025-05-05 23:01:27 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 23:01:27 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:01:27 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:01:27 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:01:27 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:01:27 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:01:28 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:01:28 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:01:29 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:01:30 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:01:30 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:01:30 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:01:30 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 4.45 seconds (process running for 72.06)
2025-05-05 23:01:30 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:01:37 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 23:01:37 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 23:01:37 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-05 23:02:49 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:02:49 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:02:49 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:02:49 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 23:02:49 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 23:02:53 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 23:02:53 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 15712 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:02:53 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:02:53 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 23:02:53 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 23:02:54 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:02:54 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2025-05-05 23:02:55 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:02:55 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:02:55 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:02:55 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:02:55 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:02:55 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1886 ms
2025-05-05 23:02:55 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:02:55 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-05 23:02:55 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:02:55 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:02:56 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-05 23:02:56 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5eb8bdc8
2025-05-05 23:02:56 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-05 23:02:56 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:02:56 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:02:56 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:02:57 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:02:58 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:02:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:02:58 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-05 23:02:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:02:59 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:02:59 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:02:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:02:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:02:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 7.241 seconds (process running for 8.42)
2025-05-05 23:03:02 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 23:03:02 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 23:03:02 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-05 23:06:10 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:06:10 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:06:10 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:06:10 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:06:10 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:06:10 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:06:10 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-05 23:06:10 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-05 23:06:10 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 15712 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:06:10 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:06:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:06:10 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
2025-05-05 23:06:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:06:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:06:10 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:06:10 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:06:10 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:06:10 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 507 ms
2025-05-05 23:06:10 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:06:10 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:06:10 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:06:10 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 23:06:10 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28534aa9
2025-05-05 23:06:10 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 23:06:10 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:06:10 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:06:10 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:06:11 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:06:11 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:06:11 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:06:11 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:06:12 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:06:12 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:06:12 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:06:12 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:06:12 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.29 seconds (process running for 201.053)
2025-05-05 23:06:12 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:09:28 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:09:28 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:09:28 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:28 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:09:28 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:28 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:09:28 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 23:09:28 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 23:09:28 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 15712 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:09:28 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:09:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:09:29 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2025-05-05 23:09:29 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:09:29 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:29 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:09:29 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:09:29 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:09:29 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 383 ms
2025-05-05 23:09:29 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:09:29 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:09:29 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:09:29 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-05 23:09:29 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e7ffce4
2025-05-05 23:09:29 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-05 23:09:29 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:09:29 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:09:29 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:09:29 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:09:29 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:09:29 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:09:30 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:09:30 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:09:30 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:09:30 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:30 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:09:30 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.728 seconds (process running for 399.223)
2025-05-05 23:09:30 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:09:38 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:09:38 INFO  [Thread-11] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:09:38 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:38 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:09:38 INFO  [Thread-11] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:38 INFO  [Thread-11] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:09:38 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-05 23:09:38 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-05 23:09:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 15712 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:09:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:09:38 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:09:38 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 JPA repository interfaces.
2025-05-05 23:09:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:09:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:38 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:09:38 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:09:38 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:09:38 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 337 ms
2025-05-05 23:09:38 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:09:38 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:09:38 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:09:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-05 23:09:38 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d393507
2025-05-05 23:09:38 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-05 23:09:38 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:09:38 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:09:38 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:09:38 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:09:38 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:09:39 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:09:39 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:09:39 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:09:39 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:09:39 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:09:39 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:09:39 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.625 seconds (process running for 408.367)
2025-05-05 23:09:39 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:10:14 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:10:14 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:10:14 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:10:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-05 23:10:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-05 23:10:20 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-05 23:10:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 3392 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:10:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:10:20 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-05 23:10:20 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-05 23:10:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:10:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2025-05-05 23:10:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:10:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:22 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:10:22 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:10:22 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:10:22 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1995 ms
2025-05-05 23:10:22 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:10:22 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-05 23:10:22 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:10:23 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:10:23 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-05 23:10:23 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@279df140
2025-05-05 23:10:23 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-05 23:10:23 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:10:23 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:10:23 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:10:24 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:10:25 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:10:25 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:10:26 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-05 23:10:26 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:10:26 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:10:27 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:10:27 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:27 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:10:27 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.957 seconds (process running for 7.867)
2025-05-05 23:10:42 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:10:42 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:10:42 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:42 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:10:42 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:42 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:10:42 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-05 23:10:42 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-05 23:10:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 3392 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:10:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:10:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:10:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-05-05 23:10:45 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:10:45 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:45 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:10:45 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:10:45 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:10:45 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1846 ms
2025-05-05 23:10:45 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:10:45 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:10:45 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:10:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-05 23:10:46 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15660320
2025-05-05 23:10:46 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-05 23:10:46 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:10:46 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:10:46 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:10:46 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:10:46 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:10:47 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:10:48 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:10:48 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:10:49 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:10:49 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:10:49 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:10:49 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.155 seconds (process running for 29.856)
2025-05-05 23:10:49 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:10:54 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-05 23:10:54 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-05 23:10:54 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-05 23:10:54 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-05 23:10:55 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-05 23:11:44 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:11:44 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:11:44 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:11:44 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:11:44 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:11:44 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:11:44 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-05 23:11:44 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-05 23:11:44 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 3392 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:11:44 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:11:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:11:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
2025-05-05 23:11:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:11:44 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:11:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:11:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:11:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:11:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 344 ms
2025-05-05 23:11:44 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:11:44 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:11:44 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:11:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-05 23:11:44 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52aaa9aa
2025-05-05 23:11:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-05 23:11:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:11:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:11:44 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:11:44 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:11:45 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:11:45 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:11:45 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:11:45 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:11:45 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:11:45 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:11:45 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:11:45 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.886 seconds (process running for 86.784)
2025-05-05 23:11:45 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:13:33 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-05 23:13:33 INFO  [Thread-11] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:13:33 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:13:33 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:13:33 INFO  [Thread-11] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-05 23:13:33 INFO  [Thread-11] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:13:33 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-05 23:13:33 INFO  [Thread-11] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-05 23:13:33 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 3392 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-05 23:13:33 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-05 23:13:33 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-05 23:13:33 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-05-05 23:13:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-05 23:13:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-05 23:13:33 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-05 23:13:33 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-05 23:13:33 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-05 23:13:33 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 425 ms
2025-05-05 23:13:33 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-05 23:13:33 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-05 23:13:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-05 23:13:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-05 23:13:33 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37ce0501
2025-05-05 23:13:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-05 23:13:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-05 23:13:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-05 23:13:33 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-05 23:13:33 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-05 23:13:34 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:13:34 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-05 23:13:34 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-05 23:13:34 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-05 23:13:35 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-05 23:13:35 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-05 23:13:35 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-05 23:13:35 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.896 seconds (process running for 196.005)
2025-05-05 23:13:35 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-05 23:13:50 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-05 23:13:50 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-05 23:13:50 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-05 23:13:50 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-05 23:13:50 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-06 09:48:02 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 09:48:02 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 488 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 09:48:02 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 09:48:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 09:48:02 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 09:48:02 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 09:48:02 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 5 JPA repository interfaces.
2025-05-06 09:48:03 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 09:48:03 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:48:03 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 09:48:03 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 09:48:03 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 09:48:03 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1543 ms
2025-05-06 09:48:03 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 09:48:03 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 09:48:03 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 09:48:04 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 09:48:04 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 09:48:04 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d5bd25e
2025-05-06 09:48:04 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 09:48:04 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 09:48:04 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 09:48:04 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 09:48:05 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 09:48:06 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:48:06 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 09:48:06 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 09:48:06 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 09:48:07 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 09:48:08 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 09:48:08 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 09:48:08 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 09:48:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.419 seconds (process running for 7.398)
2025-05-06 09:48:17 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 09:48:17 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 09:48:17 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 09:48:17 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 09:48:18 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 09:48:28 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:48:28 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:48:28 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:48:28 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:48:48 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=0, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:48:48 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=0, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:48:48 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.updateEquipment(..)
2025-05-06 09:48:48 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.updateEquipment(..)
2025-05-06 09:48:57 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:48:57 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:48:57 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:48:57 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:49:06 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 09:49:06 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 09:49:06 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:49:06 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 09:49:06 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 09:49:08 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 09:49:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 2032 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 09:49:08 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 09:49:08 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 09:49:08 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 09:49:09 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 09:49:09 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-05-06 09:49:10 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 09:49:10 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:49:10 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 09:49:10 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 09:49:10 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 09:49:10 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1786 ms
2025-05-06 09:49:10 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 09:49:10 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 09:49:10 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 09:49:10 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 09:49:10 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 09:49:11 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13954d
2025-05-06 09:49:11 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 09:49:11 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 09:49:11 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 09:49:11 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 09:49:12 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 09:49:13 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:49:13 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 09:49:13 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 09:49:13 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 09:49:14 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 09:49:14 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 09:49:14 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 09:49:14 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 09:49:14 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 6.657 seconds (process running for 7.844)
2025-05-06 09:49:14 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 09:49:14 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 09:49:14 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 09:49:15 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:49:15 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:49:15 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:49:15 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:49:28 INFO  [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 09:49:28 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 09:49:28 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:49:28 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 09:49:28 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 09:49:31 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 09:49:31 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 8828 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 09:49:31 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 09:49:31 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 09:49:31 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 09:49:32 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 09:49:32 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2025-05-06 09:49:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 09:49:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:49:33 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 09:49:33 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 09:49:33 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 09:49:33 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1659 ms
2025-05-06 09:49:33 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 09:49:33 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 09:49:33 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 09:49:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 09:49:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 09:49:33 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@221bafdd
2025-05-06 09:49:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 09:49:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 09:49:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 09:49:33 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 09:49:34 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 09:49:35 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:49:35 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 09:49:35 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 09:49:35 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 09:49:36 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 09:49:36 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 09:49:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 09:49:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 09:49:36 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 5.406 seconds (process running for 6.256)
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:49:40 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:50:02 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=981, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:50:02 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=981, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:50:02 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.updateEquipment(..)
2025-05-06 09:50:02 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.updateEquipment(..)
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:50:05 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 09:50:06 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 09:50:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:50:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:50:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:50:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:50:23 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=933, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:50:23 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.updateEquipment(..) avec les arguments : [1, EquipmentDTO(id=1, total=1100, bon=933, enPanne=100, enReparation=50, reserve=3, type=Table)]
2025-05-06 09:50:23 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.updateEquipment(..)
2025-05-06 09:50:23 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.updateEquipment(..)
2025-05-06 09:50:25 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getrec() avec les arguments : []
2025-05-06 09:50:25 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getAllReclamations() avec les arguments : []
2025-05-06 09:50:25 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getAllReclamations()
2025-05-06 09:50:25 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getrec()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 09:50:27 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleController.getAllArticles() avec les arguments : []
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleService.getAllArticles() avec les arguments : []
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleService.getAllArticles()
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleService.getAllArticles() avec les arguments : []
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleService.getAllArticles()
2025-05-06 09:51:01 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleController.getAllArticles()
2025-05-06 09:51:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getrec() avec les arguments : []
2025-05-06 09:51:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getAllReclamations() avec les arguments : []
2025-05-06 09:51:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getAllReclamations()
2025-05-06 09:51:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getrec()
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.register(..) avec les arguments : [UserDTO(username=amine, password=amineamine, email=amine1@gmail.com, role=Etudiant)]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.register(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationsByUser(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationsByUser(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:51:50 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:51:56 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationByMonth() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationByMonth() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationByMonth()
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationByMonth()
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationCountByRole() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationCountByRole() avec les arguments : []
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationCountByRole()
2025-05-06 09:52:07 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationCountByRole()
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationsByUser(..)
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationsByUser(..)
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:52:44 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleController.getAllArticles() avec les arguments : []
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleService.getAllArticles() avec les arguments : []
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleService.getAllArticles()
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ArticleService.getAllArticles() avec les arguments : []
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleService.getAllArticles()
2025-05-06 09:52:46 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ArticleController.getAllArticles()
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationsByUser(..)
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationsByUser(..)
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 09:55:13 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationByMonth() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationByMonth() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationCountByRole() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationCountByRole() avec les arguments : []
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationByMonth()
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationByMonth()
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationCountByRole()
2025-05-06 09:55:15 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationCountByRole()
2025-05-06 09:58:57 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2025-05-06 09:58:57 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 09:58:57 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:58:57 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 09:58:57 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 09:58:57 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:58:57 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 09:58:57 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 09:58:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 8828 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 09:58:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 09:58:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 09:58:58 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 5 JPA repository interfaces.
2025-05-06 09:58:58 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 09:58:58 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:58:58 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 09:58:58 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 09:58:58 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 09:58:58 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 877 ms
2025-05-06 09:58:58 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 09:58:58 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 09:58:58 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 09:58:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-06 09:58:58 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@517efc54
2025-05-06 09:58:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-06 09:58:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 09:58:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 09:58:58 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 09:58:58 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 09:58:59 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:58:59 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 09:58:59 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 09:58:59 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 09:59:00 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 09:59:00 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 09:59:00 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 09:59:00 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.822 seconds (process running for 570.112)
2025-05-06 09:59:00 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 09:59:01 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2025-05-06 09:59:01 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 09:59:01 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:59:01 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 09:59:01 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 09:59:01 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:59:01 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-06 09:59:01 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-06 09:59:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 8828 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 09:59:01 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 09:59:01 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 09:59:01 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
2025-05-06 09:59:02 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 09:59:02 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 09:59:02 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 09:59:02 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 09:59:02 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 09:59:02 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 319 ms
2025-05-06 09:59:02 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 09:59:02 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 09:59:02 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 09:59:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-06 09:59:02 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@312120ab
2025-05-06 09:59:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-06 09:59:02 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 09:59:02 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 09:59:02 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 09:59:02 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 09:59:02 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:59:02 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 09:59:02 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 09:59:02 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 09:59:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-06 09:59:02 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-06 09:59:02 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 09:59:02 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 09:59:02 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:00:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 8828 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:00:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:00:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:00:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-05-06 10:00:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:00:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:00:43 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:00:43 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:00:43 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:00:43 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 330 ms
2025-05-06 10:00:43 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:00:43 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:00:43 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:00:43 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-06 10:00:43 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ceb0b67
2025-05-06 10:00:43 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-06 10:00:43 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:00:43 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:00:43 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:00:43 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:00:44 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:00:44 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:00:44 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:00:44 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:00:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-06 10:00:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-06 10:00:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:00:44 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:00:44 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:10:44 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:10:44 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 15328 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:10:44 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:10:44 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:10:44 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:10:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:10:45 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 5 JPA repository interfaces.
2025-05-06 10:10:46 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:10:46 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:10:46 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:10:46 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:10:46 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:10:46 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2204 ms
2025-05-06 10:10:46 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:10:46 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:10:46 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:10:47 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:10:47 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:10:47 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@568516fa
2025-05-06 10:10:47 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:10:47 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:10:47 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:10:47 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:10:48 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:10:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:10:49 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:10:49 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:10:49 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:10:49 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:10:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:10:49 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:10:49 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:10:49 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:10:49 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:11:11 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:11:11 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 9484 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:11:11 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:11:11 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:11:11 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:11:12 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:11:12 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 5 JPA repository interfaces.
2025-05-06 10:11:13 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:11:13 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:11:13 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:11:13 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:11:13 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:11:13 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1312 ms
2025-05-06 10:11:13 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:11:13 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:11:13 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:11:13 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:11:13 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:11:13 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5605ba21
2025-05-06 10:11:13 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:11:13 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:11:13 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:11:13 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:11:14 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:11:15 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:11:15 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:11:15 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:11:15 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:11:15 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:11:15 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:11:15 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:11:15 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:11:15 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:11:15 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:11:35 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:11:35 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 13468 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:11:35 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:11:35 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:11:35 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:11:35 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:11:36 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 5 JPA repository interfaces.
2025-05-06 10:11:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:11:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:11:36 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:11:36 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:11:36 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:11:36 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1277 ms
2025-05-06 10:11:36 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:11:36 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:11:36 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:11:37 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:11:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:11:37 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3726d29c
2025-05-06 10:11:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:11:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:11:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:11:37 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:11:38 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:11:38 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:11:38 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:11:38 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:11:39 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:11:39 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:11:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:11:39 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:11:39 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:11:39 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:11:39 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:12:38 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:12:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 2568 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:12:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:12:38 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:12:38 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:12:39 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:12:39 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-05-06 10:12:39 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:12:39 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:12:39 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:12:39 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:12:39 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:12:39 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1298 ms
2025-05-06 10:12:40 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:12:40 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:12:40 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:12:40 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:12:40 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:12:40 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ad7f1d9
2025-05-06 10:12:40 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:12:40 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:12:40 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:12:40 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:12:41 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:12:41 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:12:42 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:12:42 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:12:42 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:12:42 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:12:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:12:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:12:42 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:12:42 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:12:42 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:13:50 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:13:50 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 10884 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:13:50 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:13:50 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:13:50 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:13:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:13:50 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-05-06 10:13:51 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:13:51 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:13:51 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:13:51 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:13:51 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:13:51 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1281 ms
2025-05-06 10:13:51 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:13:51 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:13:51 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:13:51 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:13:51 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:13:52 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5994be50
2025-05-06 10:13:52 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:13:52 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:13:52 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:13:52 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:13:52 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:13:53 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:13:53 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:13:53 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:13:53 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': Error creating bean with name 'reclamationService': Unsatisfied dependency expressed through field 'beanPostProcessorsRegistrar': No qualifying bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:13:53 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:13:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:13:53 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:13:53 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:13:53 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:13:53 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field beanPostProcessorsRegistrar in org.example.backendenicargy.Services.ReclamationService required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar' in your configuration.

2025-05-06 10:15:23 INFO  [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-06 10:15:23 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:15:23 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:15:23 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 10:15:23 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 10:15:23 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:15:23 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2025-05-06 10:15:24 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:15:24 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:15:24 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:15:24 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:15:24 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:15:24 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1270 ms
2025-05-06 10:15:24 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:15:24 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-05-06 10:15:24 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:15:24 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:15:24 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-06 10:15:25 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@442761a5
2025-05-06 10:15:25 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-06 10:15:25 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:15:25 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:15:25 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:15:25 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:15:31 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:15:31 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:15:31 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 10:15:31 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:15:32 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:15:32 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:15:32 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:15:32 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:15:32 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 9.751 seconds (process running for 10.315)
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 10:15:38 WARN  [http-nio-9090-exec-8] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-3] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 10:15:38 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.register(..) avec les arguments : [UserDTO(username=amine, password=amineamine, email=amine1@gmail.com, role=Etudiant)]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-9] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.register(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getReclamationsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getReclamationsByUser(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationsByUser(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusCountsByUser(..) avec les arguments : [2]
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusCountsByUser(..)
2025-05-06 10:16:04 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusCountsByUser(..)
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-4] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:16:17 WARN  [http-nio-9090-exec-3] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:16:17 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:19:43 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2025-05-06 10:19:43 INFO  [Thread-5] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:19:43 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:19:43 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:19:43 INFO  [Thread-5] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:19:43 INFO  [Thread-5] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:19:43 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-06 10:19:43 INFO  [Thread-5] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-06 10:19:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:19:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:19:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:19:44 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 5 JPA repository interfaces.
2025-05-06 10:19:44 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:19:44 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:19:44 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:19:44 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:19:44 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:19:44 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 617 ms
2025-05-06 10:19:44 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:19:44 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:19:44 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:19:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-05-06 10:19:44 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c2819dd
2025-05-06 10:19:44 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-05-06 10:19:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:19:44 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:19:44 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:19:44 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:19:44 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:19:45 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:19:45 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'reclamationController': Unsatisfied dependency expressed through field 'reclamationService': No qualifying bean of type 'org.example.backendenicargy.Services.ReclamationService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-05-06 10:19:45 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:19:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-05-06 10:19:45 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-05-06 10:19:45 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 10:19:45 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 10:19:45 ERROR [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field reclamationService in org.example.backendenicargy.Controllers.ReclamationController required a bean of type 'org.example.backendenicargy.Services.ReclamationService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.example.backendenicargy.Services.ReclamationService' in your configuration.

2025-05-06 10:19:46 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:19:46 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:19:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:19:47 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-05-06 10:19:47 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:19:47 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:19:47 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:19:47 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:19:47 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:19:47 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 435 ms
2025-05-06 10:19:47 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:19:47 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:19:47 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:19:47 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-05-06 10:19:47 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1529b1ef
2025-05-06 10:19:47 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-05-06 10:19:47 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:19:47 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:19:47 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:19:47 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:19:48 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:19:48 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:19:48 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:19:48 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:19:48 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:19:48 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:19:48 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:19:48 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 2.024 seconds (process running for 266.722)
2025-05-06 10:19:48 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:20:35 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:20:35 INFO  [Thread-7] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:20:35 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:35 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:20:35 INFO  [Thread-7] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:35 INFO  [Thread-7] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:35 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-05-06 10:20:35 INFO  [Thread-7] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-05-06 10:20:36 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:20:36 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:20:36 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:20:36 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-05-06 10:20:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:20:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:36 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:20:36 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:20:36 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:20:36 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 325 ms
2025-05-06 10:20:36 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:20:36 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:20:36 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:20:36 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-05-06 10:20:36 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10392f03
2025-05-06 10:20:36 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-05-06 10:20:36 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:20:36 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:20:36 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:20:36 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:20:36 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:37 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:20:37 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:20:37 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:20:37 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:20:37 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:37 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:20:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.632 seconds (process running for 315.484)
2025-05-06 10:20:37 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:20:43 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:20:43 INFO  [Thread-14] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:20:43 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:43 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:20:43 INFO  [Thread-14] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:43 INFO  [Thread-14] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:43 INFO  [Thread-14] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-05-06 10:20:43 INFO  [Thread-14] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-05-06 10:20:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:20:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:20:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:20:43 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-05-06 10:20:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:20:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:43 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:20:43 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:20:43 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:20:43 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 582 ms
2025-05-06 10:20:43 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:20:43 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:20:43 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:20:43 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-05-06 10:20:43 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3be5becb
2025-05-06 10:20:43 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-05-06 10:20:43 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:20:43 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:20:43 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:20:43 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:20:44 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:44 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:20:44 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:20:44 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:20:45 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:20:45 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:45 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:20:45 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.952 seconds (process running for 322.96)
2025-05-06 10:20:45 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:20:49 INFO  [http-nio-9090-exec-5] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:20:49 INFO  [http-nio-9090-exec-5] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:20:49 INFO  [http-nio-9090-exec-5] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-06 10:20:49 WARN  [http-nio-9090-exec-5] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:20:57 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:20:57 INFO  [Thread-18] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:20:57 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:57 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:20:57 INFO  [Thread-18] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:57 INFO  [Thread-18] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:57 INFO  [Thread-18] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-05-06 10:20:57 INFO  [Thread-18] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-05-06 10:20:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:20:57 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:20:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:20:57 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2025-05-06 10:20:58 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:20:58 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:58 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:20:58 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:20:58 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:20:58 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 347 ms
2025-05-06 10:20:58 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:20:58 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:20:58 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:20:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-05-06 10:20:58 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@348612a4
2025-05-06 10:20:58 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-05-06 10:20:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:20:58 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:20:58 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:20:58 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:20:58 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:20:58 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:20:58 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:20:59 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:20:59 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:20:59 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:20:59 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:20:59 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.566 seconds (process running for 337.155)
2025-05-06 10:20:59 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:21:18 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:21:18 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:21:18 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 10:21:18 WARN  [http-nio-9090-exec-2] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:21:33 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:21:33 INFO  [Thread-22] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:21:33 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:33 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:21:33 INFO  [Thread-22] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:33 INFO  [Thread-22] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:33 INFO  [Thread-22] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-05-06 10:21:33 INFO  [Thread-22] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-05-06 10:21:33 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:21:33 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:21:33 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:21:33 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
2025-05-06 10:21:33 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:21:33 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:33 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:21:33 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:21:33 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:21:33 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 311 ms
2025-05-06 10:21:33 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:21:33 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:21:33 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:21:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-05-06 10:21:33 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e7a88d9
2025-05-06 10:21:33 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-05-06 10:21:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:21:33 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:21:33 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:21:33 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:21:33 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:34 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:21:34 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:21:34 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:21:35 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:21:35 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:35 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:21:35 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.92 seconds (process running for 372.959)
2025-05-06 10:21:35 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:21:36 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:21:36 INFO  [Thread-26] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:21:36 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:36 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:21:36 INFO  [Thread-26] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:36 INFO  [Thread-26] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:36 INFO  [Thread-26] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-05-06 10:21:36 INFO  [Thread-26] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-05-06 10:21:36 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:21:36 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:21:36 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:21:36 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 JPA repository interfaces.
2025-05-06 10:21:36 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:21:36 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:36 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:21:36 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:21:36 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:21:36 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 396 ms
2025-05-06 10:21:37 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:21:37 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:21:37 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:21:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-05-06 10:21:37 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78f06f0d
2025-05-06 10:21:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-05-06 10:21:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:21:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:21:37 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-8)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:21:37 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:21:37 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:37 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:21:38 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:21:38 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:21:38 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:21:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:21:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.866 seconds (process running for 376.307)
2025-05-06 10:21:38 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:21:41 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:21:41 INFO  [Thread-30] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:21:41 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:41 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:21:41 INFO  [Thread-30] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:41 INFO  [Thread-30] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:41 INFO  [Thread-30] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-05-06 10:21:41 INFO  [Thread-30] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-05-06 10:21:41 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:21:41 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:21:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:21:42 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-05-06 10:21:42 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:21:42 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:42 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:21:42 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:21:42 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:21:42 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 583 ms
2025-05-06 10:21:42 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:21:42 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:21:42 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:21:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-05-06 10:21:42 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2275dc65
2025-05-06 10:21:42 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-05-06 10:21:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:21:42 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:21:42 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-9)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:21:42 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:21:43 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:21:43 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:21:43 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:21:43 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:21:43 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:21:43 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:21:43 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:21:43 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.862 seconds (process running for 381.656)
2025-05-06 10:21:43 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:21:52 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:21:52 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:21:52 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 10:22:20 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:22:20 INFO  [Thread-34] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:22:20 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:22:20 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:22:20 INFO  [Thread-34] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:22:20 INFO  [Thread-34] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:22:20 INFO  [Thread-34] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-05-06 10:22:20 INFO  [Thread-34] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-05-06 10:22:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:22:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:22:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:22:20 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-05-06 10:22:21 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:22:21 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:22:21 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:22:21 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:22:21 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:22:21 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 336 ms
2025-05-06 10:22:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:22:21 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:22:21 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:22:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-05-06 10:22:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection com.mysql.cj.jdbc.ConnectionImpl@211c4933
2025-05-06 10:22:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-05-06 10:22:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:22:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:22:21 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-10)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:22:21 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:22:21 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:22:21 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:22:21 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:22:22 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:22:22 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:22:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:22:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:22:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.568 seconds (process running for 420.137)
2025-05-06 10:22:22 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:22:45 INFO  [http-nio-9090-exec-3] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:22:45 INFO  [http-nio-9090-exec-3] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:22:45 INFO  [http-nio-9090-exec-3] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 10:22:53 WARN  [http-nio-9090-exec-4] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:22:53 INFO  [http-nio-9090-exec-10] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:23:14 WARN  [http-nio-9090-exec-9] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:23:16 WARN  [http-nio-9090-exec-1] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-6] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:23:34 WARN  [http-nio-9090-exec-4] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-2] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getStatusByMonth() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationController.getScrappedData() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.getStatusByMonth() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.getStatusByMonth()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getStatusByMonth()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationScrapingService.getConsommationDataFromHtml()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-8] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ConsommationController.getScrappedData()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentController.getAllEquipments() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : EquipmentService.getAllEquipments() avec les arguments : []
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentService.getAllEquipments()
2025-05-06 10:23:34 INFO  [http-nio-9090-exec-5] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : EquipmentController.getAllEquipments()
2025-05-06 10:24:04 WARN  [http-nio-9090-exec-10] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:24:45 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : AuthController.login(..) avec les arguments : [AuthController.LoginRequest(email=amine@gmail.com, password=amine)]
2025-05-06 10:24:45 INFO  [http-nio-9090-exec-7] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : AuthController.login(..)
2025-05-06 10:25:20 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:25:20 INFO  [Thread-38] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:25:20 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:25:20 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:25:20 INFO  [Thread-38] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:25:20 INFO  [Thread-38] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:25:20 INFO  [Thread-38] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-05-06 10:25:20 INFO  [Thread-38] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-05-06 10:25:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:25:20 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:25:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:25:21 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 5 JPA repository interfaces.
2025-05-06 10:25:21 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:25:21 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:25:21 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:25:21 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:25:21 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:25:21 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 581 ms
2025-05-06 10:25:21 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:25:21 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:25:21 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:25:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-05-06 10:25:21 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection com.mysql.cj.jdbc.ConnectionImpl@76cb8345
2025-05-06 10:25:21 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-05-06 10:25:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:25:21 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:25:21 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-11)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:25:21 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:25:22 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:25:22 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:25:22 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:25:22 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:25:22 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:25:22 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:25:22 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:25:22 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.907 seconds (process running for 600.713)
2025-05-06 10:25:22 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:25:50 INFO  [http-nio-9090-exec-2] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:25:50 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:25:50 INFO  [http-nio-9090-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-06 10:25:50 WARN  [http-nio-9090-exec-2] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:26:24 WARN  [http-nio-9090-exec-5] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-05-06 10:26:37 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:26:37 INFO  [Thread-42] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:26:37 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:26:37 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:26:37 INFO  [Thread-42] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:26:37 INFO  [Thread-42] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:26:37 INFO  [Thread-42] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-05-06 10:26:37 INFO  [Thread-42] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-05-06 10:26:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:26:37 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:26:37 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:26:37 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-05-06 10:26:37 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:26:37 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:26:37 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:26:37 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:26:37 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:26:37 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 297 ms
2025-05-06 10:26:37 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:26:37 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:26:37 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:26:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-05-06 10:26:37 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a6cb1d1
2025-05-06 10:26:37 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-05-06 10:26:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:26:37 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:26:37 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-12)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:26:37 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:26:37 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:26:38 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:26:38 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:26:38 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:26:38 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:26:38 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:26:38 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:26:38 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.594 seconds (process running for 676.613)
2025-05-06 10:26:38 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationController.getReclamationUsers() avec les arguments : []
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ➡️ [BEFORE] Appel de la méthode du controller : ReclamationService.userCount() avec les arguments : []
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationService.userCount()
2025-05-06 10:26:39 INFO  [http-nio-9090-exec-1] o.e.b.Aspects.LoggingAspect - ✅ [AFTER] Fin d'exécution de la méthode du controller : ReclamationController.getReclamationUsers()
2025-05-06 10:27:17 INFO  [File Watcher] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-05-06 10:27:17 INFO  [Thread-46] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-06 10:27:17 INFO  [tomcat-shutdown] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:27:17 INFO  [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-06 10:27:17 INFO  [Thread-46] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-9090"]
2025-05-06 10:27:17 INFO  [Thread-46] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:27:17 INFO  [Thread-46] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-05-06 10:27:17 INFO  [Thread-46] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-05-06 10:27:17 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Starting BackendEnicargyApplication using Java 21.0.5 with PID 4824 (C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy\target\classes started by Dell in C:\Users\Dell\Desktop\platforme web projet\BackendEnicargy)
2025-05-06 10:27:17 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-06 10:27:17 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 10:27:17 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2025-05-06 10:27:17 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-05-06 10:27:17 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9090"]
2025-05-06 10:27:17 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 10:27:17 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-05-06 10:27:17 INFO  [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 10:27:17 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 304 ms
2025-05-06 10:27:17 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 10:27:17 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 10:27:18 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 10:27:18 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-05-06 10:27:18 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dfe109b
2025-05-06 10:27:18 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-05-06 10:27:18 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:27:18 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-06 10:27:18 INFO  [restartedMain] o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-13)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-06 10:27:18 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 10:27:18 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 10:27:18 INFO  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-05-06 10:27:18 WARN  [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-06 10:27:18 WARN  [restartedMain] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [api/v1/auth/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-05-06 10:27:19 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 10:27:19 INFO  [restartedMain] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9090"]
2025-05-06 10:27:19 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-05-06 10:27:19 INFO  [restartedMain] o.e.b.BackendEnicargyApplication - Started BackendEnicargyApplication in 1.622 seconds (process running for 717.097)
2025-05-06 10:27:19 INFO  [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
